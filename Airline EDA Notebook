{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "1bdbad11",
   "metadata": {
    "papermill": {
     "duration": 0.019285,
     "end_time": "2024-06-07T11:38:28.490394",
     "exception": false,
     "start_time": "2024-06-07T11:38:28.471109",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Introduction \n",
    "\n",
    "This project involves the Exploratory Data Analysis (EDA) of an airline dataset. The dataset contains various details about passengers, flights, airports, and flight statuses. Below is a detailed walkthrough of the analysis performed.\n",
    "\n",
    "## Table of Contents\n",
    "1. [Importing Libraries](#importing-libraries)\n",
    "2. [Loading the Dataset](#loading-the-dataset)\n",
    "3. [Initial Data Exploration](#initial-data-exploration)\n",
    "4. [Data Cleaning](#data-cleaning)\n",
    "5. [Exploratory Data Analysis](#exploratory-data-analysis)\n",
    "    - [Gender Distribution](#gender-distribution)\n",
    "    - [Age Distribution](#age-distribution)\n",
    "    - [Nationality Distribution](#nationality-distribution)\n",
    "    - [Airport Analysis](#airport-analysis)\n",
    "   "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "54f0720d",
   "metadata": {
    "papermill": {
     "duration": 0.016242,
     "end_time": "2024-06-07T11:38:28.524701",
     "exception": false,
     "start_time": "2024-06-07T11:38:28.508459",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 1. Importing Libraries "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "02520eca",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:28.561028Z",
     "iopub.status.busy": "2024-06-07T11:38:28.560597Z",
     "iopub.status.idle": "2024-06-07T11:38:32.324261Z",
     "shell.execute_reply": "2024-06-07T11:38:32.322793Z"
    },
    "papermill": {
     "duration": 3.784816,
     "end_time": "2024-06-07T11:38:32.327115",
     "exception": false,
     "start_time": "2024-06-07T11:38:28.542299",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/airline-dataset/Airline Dataset Updated.csv\n",
      "/kaggle/input/airline-dataset/Airline Dataset Updated - v2.csv\n",
      "/kaggle/input/airline-dataset/Airline Dataset.csv\n"
     ]
    }
   ],
   "source": [
    "\n",
    "import numpy as np \n",
    "import pandas as pd \n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns \n",
    "import missingno as msno\n",
    "import plotly.express as px\n",
    "\n",
    "import folium \n",
    "from folium.plugins import HeatMap\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a726a328",
   "metadata": {
    "papermill": {
     "duration": 0.015628,
     "end_time": "2024-06-07T11:38:32.359228",
     "exception": false,
     "start_time": "2024-06-07T11:38:32.343600",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 2. Loading Dataset "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "d2287464",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:32.394216Z",
     "iopub.status.busy": "2024-06-07T11:38:32.393153Z",
     "iopub.status.idle": "2024-06-07T11:38:33.107831Z",
     "shell.execute_reply": "2024-06-07T11:38:33.106588Z"
    },
    "papermill": {
     "duration": 0.735113,
     "end_time": "2024-06-07T11:38:33.110412",
     "exception": false,
     "start_time": "2024-06-07T11:38:32.375299",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = pd.read_csv('/kaggle/input/airline-dataset/Airline Dataset Updated - v2.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "f7ed4f24",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:33.144020Z",
     "iopub.status.busy": "2024-06-07T11:38:33.143617Z",
     "iopub.status.idle": "2024-06-07T11:38:33.174806Z",
     "shell.execute_reply": "2024-06-07T11:38:33.173538Z"
    },
    "papermill": {
     "duration": 0.051045,
     "end_time": "2024-06-07T11:38:33.177316",
     "exception": false,
     "start_time": "2024-06-07T11:38:33.126271",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Passenger ID</th>\n",
       "      <th>First Name</th>\n",
       "      <th>Last Name</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Nationality</th>\n",
       "      <th>Airport Name</th>\n",
       "      <th>Airport Country Code</th>\n",
       "      <th>Country Name</th>\n",
       "      <th>Airport Continent</th>\n",
       "      <th>Continents</th>\n",
       "      <th>Departure Date</th>\n",
       "      <th>Arrival Airport</th>\n",
       "      <th>Pilot Name</th>\n",
       "      <th>Flight Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ABVWIg</td>\n",
       "      <td>Edithe</td>\n",
       "      <td>Leggis</td>\n",
       "      <td>Female</td>\n",
       "      <td>62</td>\n",
       "      <td>Japan</td>\n",
       "      <td>Coldfoot Airport</td>\n",
       "      <td>US</td>\n",
       "      <td>United States</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>6/28/2022</td>\n",
       "      <td>CXF</td>\n",
       "      <td>Fransisco Hazeldine</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>jkXXAX</td>\n",
       "      <td>Elwood</td>\n",
       "      <td>Catt</td>\n",
       "      <td>Male</td>\n",
       "      <td>62</td>\n",
       "      <td>Nicaragua</td>\n",
       "      <td>Kugluktuk Airport</td>\n",
       "      <td>CA</td>\n",
       "      <td>Canada</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>12/26/2022</td>\n",
       "      <td>YCO</td>\n",
       "      <td>Marla Parsonage</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>CdUz2g</td>\n",
       "      <td>Darby</td>\n",
       "      <td>Felgate</td>\n",
       "      <td>Male</td>\n",
       "      <td>67</td>\n",
       "      <td>Russia</td>\n",
       "      <td>Grenoble-Isère Airport</td>\n",
       "      <td>FR</td>\n",
       "      <td>France</td>\n",
       "      <td>EU</td>\n",
       "      <td>Europe</td>\n",
       "      <td>1/18/2022</td>\n",
       "      <td>GNB</td>\n",
       "      <td>Rhonda Amber</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>BRS38V</td>\n",
       "      <td>Dominica</td>\n",
       "      <td>Pyle</td>\n",
       "      <td>Female</td>\n",
       "      <td>71</td>\n",
       "      <td>China</td>\n",
       "      <td>Ottawa / Gatineau Airport</td>\n",
       "      <td>CA</td>\n",
       "      <td>Canada</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>9/16/2022</td>\n",
       "      <td>YND</td>\n",
       "      <td>Kacie Commucci</td>\n",
       "      <td>Delayed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>9kvTLo</td>\n",
       "      <td>Bay</td>\n",
       "      <td>Pencost</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>China</td>\n",
       "      <td>Gillespie Field</td>\n",
       "      <td>US</td>\n",
       "      <td>United States</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>2/25/2022</td>\n",
       "      <td>SEE</td>\n",
       "      <td>Ebonee Tree</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>nMJKVh</td>\n",
       "      <td>Lora</td>\n",
       "      <td>Durbann</td>\n",
       "      <td>Female</td>\n",
       "      <td>55</td>\n",
       "      <td>Brazil</td>\n",
       "      <td>Coronel Horácio de Mattos Airport</td>\n",
       "      <td>BR</td>\n",
       "      <td>Brazil</td>\n",
       "      <td>SAM</td>\n",
       "      <td>South America</td>\n",
       "      <td>06-10-2022</td>\n",
       "      <td>LEC</td>\n",
       "      <td>Inglis Dolley</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>8IPFPE</td>\n",
       "      <td>Rand</td>\n",
       "      <td>Bram</td>\n",
       "      <td>Male</td>\n",
       "      <td>73</td>\n",
       "      <td>Ivory Coast</td>\n",
       "      <td>Duxford Aerodrome</td>\n",
       "      <td>GB</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>EU</td>\n",
       "      <td>Europe</td>\n",
       "      <td>10/30/2022</td>\n",
       "      <td>QFO</td>\n",
       "      <td>Stanislas Tiffin</td>\n",
       "      <td>Cancelled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>pqixbY</td>\n",
       "      <td>Perceval</td>\n",
       "      <td>Dallosso</td>\n",
       "      <td>Male</td>\n",
       "      <td>36</td>\n",
       "      <td>Vietnam</td>\n",
       "      <td>Maestro Wilson Fonseca Airport</td>\n",
       "      <td>BR</td>\n",
       "      <td>Brazil</td>\n",
       "      <td>SAM</td>\n",
       "      <td>South America</td>\n",
       "      <td>04-07-2022</td>\n",
       "      <td>STM</td>\n",
       "      <td>Sharyl Eastmead</td>\n",
       "      <td>Cancelled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>QNAs2R</td>\n",
       "      <td>Aleda</td>\n",
       "      <td>Pigram</td>\n",
       "      <td>Female</td>\n",
       "      <td>35</td>\n",
       "      <td>Palestinian Territory</td>\n",
       "      <td>Venice Marco Polo Airport</td>\n",
       "      <td>IT</td>\n",
       "      <td>Italy</td>\n",
       "      <td>EU</td>\n",
       "      <td>Europe</td>\n",
       "      <td>8/20/2022</td>\n",
       "      <td>VCE</td>\n",
       "      <td>Daryn Bardsley</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>3jmudz</td>\n",
       "      <td>Burlie</td>\n",
       "      <td>Schustl</td>\n",
       "      <td>Male</td>\n",
       "      <td>13</td>\n",
       "      <td>Thailand</td>\n",
       "      <td>Vermilion Airport</td>\n",
       "      <td>CA</td>\n",
       "      <td>Canada</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>04-06-2022</td>\n",
       "      <td>YVG</td>\n",
       "      <td>Alameda Carlyle</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Passenger ID First Name Last Name  Gender  Age            Nationality  \\\n",
       "0       ABVWIg     Edithe    Leggis  Female   62                  Japan   \n",
       "1       jkXXAX     Elwood      Catt    Male   62              Nicaragua   \n",
       "2       CdUz2g      Darby   Felgate    Male   67                 Russia   \n",
       "3       BRS38V   Dominica      Pyle  Female   71                  China   \n",
       "4       9kvTLo        Bay   Pencost    Male   21                  China   \n",
       "5       nMJKVh       Lora   Durbann  Female   55                 Brazil   \n",
       "6       8IPFPE       Rand      Bram    Male   73            Ivory Coast   \n",
       "7       pqixbY   Perceval  Dallosso    Male   36                Vietnam   \n",
       "8       QNAs2R      Aleda    Pigram  Female   35  Palestinian Territory   \n",
       "9       3jmudz     Burlie   Schustl    Male   13               Thailand   \n",
       "\n",
       "                        Airport Name Airport Country Code    Country Name  \\\n",
       "0                   Coldfoot Airport                   US   United States   \n",
       "1                  Kugluktuk Airport                   CA          Canada   \n",
       "2             Grenoble-Isère Airport                   FR          France   \n",
       "3          Ottawa / Gatineau Airport                   CA          Canada   \n",
       "4                    Gillespie Field                   US   United States   \n",
       "5  Coronel Horácio de Mattos Airport                   BR          Brazil   \n",
       "6                  Duxford Aerodrome                   GB  United Kingdom   \n",
       "7     Maestro Wilson Fonseca Airport                   BR          Brazil   \n",
       "8          Venice Marco Polo Airport                   IT           Italy   \n",
       "9                  Vermilion Airport                   CA          Canada   \n",
       "\n",
       "  Airport Continent     Continents Departure Date Arrival Airport  \\\n",
       "0               NAM  North America      6/28/2022             CXF   \n",
       "1               NAM  North America     12/26/2022             YCO   \n",
       "2                EU         Europe      1/18/2022             GNB   \n",
       "3               NAM  North America      9/16/2022             YND   \n",
       "4               NAM  North America      2/25/2022             SEE   \n",
       "5               SAM  South America     06-10-2022             LEC   \n",
       "6                EU         Europe     10/30/2022             QFO   \n",
       "7               SAM  South America     04-07-2022             STM   \n",
       "8                EU         Europe      8/20/2022             VCE   \n",
       "9               NAM  North America     04-06-2022             YVG   \n",
       "\n",
       "            Pilot Name Flight Status  \n",
       "0  Fransisco Hazeldine       On Time  \n",
       "1      Marla Parsonage       On Time  \n",
       "2         Rhonda Amber       On Time  \n",
       "3       Kacie Commucci       Delayed  \n",
       "4          Ebonee Tree       On Time  \n",
       "5        Inglis Dolley       On Time  \n",
       "6     Stanislas Tiffin     Cancelled  \n",
       "7      Sharyl Eastmead     Cancelled  \n",
       "8       Daryn Bardsley       On Time  \n",
       "9      Alameda Carlyle       On Time  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "29a004f0",
   "metadata": {
    "papermill": {
     "duration": 0.016727,
     "end_time": "2024-06-07T11:38:33.210377",
     "exception": false,
     "start_time": "2024-06-07T11:38:33.193650",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 3. Inital Data Exploration"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "97d8b38c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:33.245864Z",
     "iopub.status.busy": "2024-06-07T11:38:33.245470Z",
     "iopub.status.idle": "2024-06-07T11:38:33.252786Z",
     "shell.execute_reply": "2024-06-07T11:38:33.251495Z"
    },
    "papermill": {
     "duration": 0.02765,
     "end_time": "2024-06-07T11:38:33.255122",
     "exception": false,
     "start_time": "2024-06-07T11:38:33.227472",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(98619, 15)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0fef62f6",
   "metadata": {
    "papermill": {
     "duration": 0.016911,
     "end_time": "2024-06-07T11:38:33.288984",
     "exception": false,
     "start_time": "2024-06-07T11:38:33.272073",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "We have 98619 entries with 15 columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "913050fb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:33.323627Z",
     "iopub.status.busy": "2024-06-07T11:38:33.323212Z",
     "iopub.status.idle": "2024-06-07T11:38:33.424629Z",
     "shell.execute_reply": "2024-06-07T11:38:33.422845Z"
    },
    "papermill": {
     "duration": 0.122074,
     "end_time": "2024-06-07T11:38:33.427475",
     "exception": false,
     "start_time": "2024-06-07T11:38:33.305401",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 98619 entries, 0 to 98618\n",
      "Data columns (total 15 columns):\n",
      " #   Column                Non-Null Count  Dtype \n",
      "---  ------                --------------  ----- \n",
      " 0   Passenger ID          98619 non-null  object\n",
      " 1   First Name            98619 non-null  object\n",
      " 2   Last Name             98619 non-null  object\n",
      " 3   Gender                98619 non-null  object\n",
      " 4   Age                   98619 non-null  int64 \n",
      " 5   Nationality           98619 non-null  object\n",
      " 6   Airport Name          98619 non-null  object\n",
      " 7   Airport Country Code  98619 non-null  object\n",
      " 8   Country Name          98619 non-null  object\n",
      " 9   Airport Continent     98619 non-null  object\n",
      " 10  Continents            98619 non-null  object\n",
      " 11  Departure Date        98619 non-null  object\n",
      " 12  Arrival Airport       98619 non-null  object\n",
      " 13  Pilot Name            98619 non-null  object\n",
      " 14  Flight Status         98619 non-null  object\n",
      "dtypes: int64(1), object(14)\n",
      "memory usage: 11.3+ MB\n"
     ]
    }
   ],
   "source": [
    "#Checking the datatypes \n",
    "\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "430c47d8",
   "metadata": {
    "papermill": {
     "duration": 0.016915,
     "end_time": "2024-06-07T11:38:33.461406",
     "exception": false,
     "start_time": "2024-06-07T11:38:33.444491",
     "status": "completed"
    },
    "tags": []
   },
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "89d2d045",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:33.501251Z",
     "iopub.status.busy": "2024-06-07T11:38:33.500234Z",
     "iopub.status.idle": "2024-06-07T11:38:33.575512Z",
     "shell.execute_reply": "2024-06-07T11:38:33.574182Z"
    },
    "papermill": {
     "duration": 0.09845,
     "end_time": "2024-06-07T11:38:33.578075",
     "exception": false,
     "start_time": "2024-06-07T11:38:33.479625",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Passenger ID            0\n",
       "First Name              0\n",
       "Last Name               0\n",
       "Gender                  0\n",
       "Age                     0\n",
       "Nationality             0\n",
       "Airport Name            0\n",
       "Airport Country Code    0\n",
       "Country Name            0\n",
       "Airport Continent       0\n",
       "Continents              0\n",
       "Departure Date          0\n",
       "Arrival Airport         0\n",
       "Pilot Name              0\n",
       "Flight Status           0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#checking the null values for confirmation\n",
    "\n",
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2f9059b1",
   "metadata": {
    "papermill": {
     "duration": 0.016887,
     "end_time": "2024-06-07T11:38:33.612737",
     "exception": false,
     "start_time": "2024-06-07T11:38:33.595850",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "We don't have any null values in the dataset."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9066e72b",
   "metadata": {
    "papermill": {
     "duration": 0.017457,
     "end_time": "2024-06-07T11:38:33.648247",
     "exception": false,
     "start_time": "2024-06-07T11:38:33.630790",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 4. Data Cleaning "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "04cc5ebf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:33.683448Z",
     "iopub.status.busy": "2024-06-07T11:38:33.683008Z",
     "iopub.status.idle": "2024-06-07T11:38:33.701534Z",
     "shell.execute_reply": "2024-06-07T11:38:33.700370Z"
    },
    "papermill": {
     "duration": 0.039458,
     "end_time": "2024-06-07T11:38:33.704361",
     "exception": false,
     "start_time": "2024-06-07T11:38:33.664903",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Passenger ID</th>\n",
       "      <th>First Name</th>\n",
       "      <th>Last Name</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Nationality</th>\n",
       "      <th>Airport Name</th>\n",
       "      <th>Airport Country Code</th>\n",
       "      <th>Country Name</th>\n",
       "      <th>Airport Continent</th>\n",
       "      <th>Continents</th>\n",
       "      <th>Departure Date</th>\n",
       "      <th>Arrival Airport</th>\n",
       "      <th>Pilot Name</th>\n",
       "      <th>Flight Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ABVWIg</td>\n",
       "      <td>Edithe</td>\n",
       "      <td>Leggis</td>\n",
       "      <td>Female</td>\n",
       "      <td>62</td>\n",
       "      <td>Japan</td>\n",
       "      <td>Coldfoot Airport</td>\n",
       "      <td>US</td>\n",
       "      <td>United States</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>6/28/2022</td>\n",
       "      <td>CXF</td>\n",
       "      <td>Fransisco Hazeldine</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>jkXXAX</td>\n",
       "      <td>Elwood</td>\n",
       "      <td>Catt</td>\n",
       "      <td>Male</td>\n",
       "      <td>62</td>\n",
       "      <td>Nicaragua</td>\n",
       "      <td>Kugluktuk Airport</td>\n",
       "      <td>CA</td>\n",
       "      <td>Canada</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>12/26/2022</td>\n",
       "      <td>YCO</td>\n",
       "      <td>Marla Parsonage</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>CdUz2g</td>\n",
       "      <td>Darby</td>\n",
       "      <td>Felgate</td>\n",
       "      <td>Male</td>\n",
       "      <td>67</td>\n",
       "      <td>Russia</td>\n",
       "      <td>Grenoble-Isère Airport</td>\n",
       "      <td>FR</td>\n",
       "      <td>France</td>\n",
       "      <td>EU</td>\n",
       "      <td>Europe</td>\n",
       "      <td>1/18/2022</td>\n",
       "      <td>GNB</td>\n",
       "      <td>Rhonda Amber</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>BRS38V</td>\n",
       "      <td>Dominica</td>\n",
       "      <td>Pyle</td>\n",
       "      <td>Female</td>\n",
       "      <td>71</td>\n",
       "      <td>China</td>\n",
       "      <td>Ottawa / Gatineau Airport</td>\n",
       "      <td>CA</td>\n",
       "      <td>Canada</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>9/16/2022</td>\n",
       "      <td>YND</td>\n",
       "      <td>Kacie Commucci</td>\n",
       "      <td>Delayed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>9kvTLo</td>\n",
       "      <td>Bay</td>\n",
       "      <td>Pencost</td>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>China</td>\n",
       "      <td>Gillespie Field</td>\n",
       "      <td>US</td>\n",
       "      <td>United States</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>2/25/2022</td>\n",
       "      <td>SEE</td>\n",
       "      <td>Ebonee Tree</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Passenger ID First Name Last Name  Gender  Age Nationality  \\\n",
       "0       ABVWIg     Edithe    Leggis  Female   62       Japan   \n",
       "1       jkXXAX     Elwood      Catt    Male   62   Nicaragua   \n",
       "2       CdUz2g      Darby   Felgate    Male   67      Russia   \n",
       "3       BRS38V   Dominica      Pyle  Female   71       China   \n",
       "4       9kvTLo        Bay   Pencost    Male   21       China   \n",
       "\n",
       "                Airport Name Airport Country Code   Country Name  \\\n",
       "0           Coldfoot Airport                   US  United States   \n",
       "1          Kugluktuk Airport                   CA         Canada   \n",
       "2     Grenoble-Isère Airport                   FR         France   \n",
       "3  Ottawa / Gatineau Airport                   CA         Canada   \n",
       "4            Gillespie Field                   US  United States   \n",
       "\n",
       "  Airport Continent     Continents Departure Date Arrival Airport  \\\n",
       "0               NAM  North America      6/28/2022             CXF   \n",
       "1               NAM  North America     12/26/2022             YCO   \n",
       "2                EU         Europe      1/18/2022             GNB   \n",
       "3               NAM  North America      9/16/2022             YND   \n",
       "4               NAM  North America      2/25/2022             SEE   \n",
       "\n",
       "            Pilot Name Flight Status  \n",
       "0  Fransisco Hazeldine       On Time  \n",
       "1      Marla Parsonage       On Time  \n",
       "2         Rhonda Amber       On Time  \n",
       "3       Kacie Commucci       Delayed  \n",
       "4          Ebonee Tree       On Time  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Let's check the dataset again \n",
    "df.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f81d79e7",
   "metadata": {
    "papermill": {
     "duration": 0.018576,
     "end_time": "2024-06-07T11:38:33.741443",
     "exception": false,
     "start_time": "2024-06-07T11:38:33.722867",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Here **First Name, Last Name** and **Passenger ID** columns doesn't hold much significance so we can drop them. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "26039cc0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:33.778251Z",
     "iopub.status.busy": "2024-06-07T11:38:33.777865Z",
     "iopub.status.idle": "2024-06-07T11:38:33.797541Z",
     "shell.execute_reply": "2024-06-07T11:38:33.796417Z"
    },
    "papermill": {
     "duration": 0.041928,
     "end_time": "2024-06-07T11:38:33.800669",
     "exception": false,
     "start_time": "2024-06-07T11:38:33.758741",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = df.drop(['First Name', 'Last Name', 'Passenger ID'], axis = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "62f3001a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:33.840164Z",
     "iopub.status.busy": "2024-06-07T11:38:33.839728Z",
     "iopub.status.idle": "2024-06-07T11:38:33.856492Z",
     "shell.execute_reply": "2024-06-07T11:38:33.855107Z"
    },
    "papermill": {
     "duration": 0.040144,
     "end_time": "2024-06-07T11:38:33.858999",
     "exception": false,
     "start_time": "2024-06-07T11:38:33.818855",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Nationality</th>\n",
       "      <th>Airport Name</th>\n",
       "      <th>Airport Country Code</th>\n",
       "      <th>Country Name</th>\n",
       "      <th>Airport Continent</th>\n",
       "      <th>Continents</th>\n",
       "      <th>Departure Date</th>\n",
       "      <th>Arrival Airport</th>\n",
       "      <th>Pilot Name</th>\n",
       "      <th>Flight Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Female</td>\n",
       "      <td>62</td>\n",
       "      <td>Japan</td>\n",
       "      <td>Coldfoot Airport</td>\n",
       "      <td>US</td>\n",
       "      <td>United States</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>6/28/2022</td>\n",
       "      <td>CXF</td>\n",
       "      <td>Fransisco Hazeldine</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Male</td>\n",
       "      <td>62</td>\n",
       "      <td>Nicaragua</td>\n",
       "      <td>Kugluktuk Airport</td>\n",
       "      <td>CA</td>\n",
       "      <td>Canada</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>12/26/2022</td>\n",
       "      <td>YCO</td>\n",
       "      <td>Marla Parsonage</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Male</td>\n",
       "      <td>67</td>\n",
       "      <td>Russia</td>\n",
       "      <td>Grenoble-Isère Airport</td>\n",
       "      <td>FR</td>\n",
       "      <td>France</td>\n",
       "      <td>EU</td>\n",
       "      <td>Europe</td>\n",
       "      <td>1/18/2022</td>\n",
       "      <td>GNB</td>\n",
       "      <td>Rhonda Amber</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Female</td>\n",
       "      <td>71</td>\n",
       "      <td>China</td>\n",
       "      <td>Ottawa / Gatineau Airport</td>\n",
       "      <td>CA</td>\n",
       "      <td>Canada</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>9/16/2022</td>\n",
       "      <td>YND</td>\n",
       "      <td>Kacie Commucci</td>\n",
       "      <td>Delayed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>China</td>\n",
       "      <td>Gillespie Field</td>\n",
       "      <td>US</td>\n",
       "      <td>United States</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>2/25/2022</td>\n",
       "      <td>SEE</td>\n",
       "      <td>Ebonee Tree</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Gender  Age Nationality               Airport Name Airport Country Code  \\\n",
       "0  Female   62       Japan           Coldfoot Airport                   US   \n",
       "1    Male   62   Nicaragua          Kugluktuk Airport                   CA   \n",
       "2    Male   67      Russia     Grenoble-Isère Airport                   FR   \n",
       "3  Female   71       China  Ottawa / Gatineau Airport                   CA   \n",
       "4    Male   21       China            Gillespie Field                   US   \n",
       "\n",
       "    Country Name Airport Continent     Continents Departure Date  \\\n",
       "0  United States               NAM  North America      6/28/2022   \n",
       "1         Canada               NAM  North America     12/26/2022   \n",
       "2         France                EU         Europe      1/18/2022   \n",
       "3         Canada               NAM  North America      9/16/2022   \n",
       "4  United States               NAM  North America      2/25/2022   \n",
       "\n",
       "  Arrival Airport           Pilot Name Flight Status  \n",
       "0             CXF  Fransisco Hazeldine       On Time  \n",
       "1             YCO      Marla Parsonage       On Time  \n",
       "2             GNB         Rhonda Amber       On Time  \n",
       "3             YND       Kacie Commucci       Delayed  \n",
       "4             SEE          Ebonee Tree       On Time  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9b3d4236",
   "metadata": {
    "papermill": {
     "duration": 0.017202,
     "end_time": "2024-06-07T11:38:33.894423",
     "exception": false,
     "start_time": "2024-06-07T11:38:33.877221",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 5. Exploratory Data Analysis "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e4d4e98e",
   "metadata": {
    "papermill": {
     "duration": 0.075352,
     "end_time": "2024-06-07T11:38:33.987698",
     "exception": false,
     "start_time": "2024-06-07T11:38:33.912346",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Gender Column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "7e9d3873",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:34.023987Z",
     "iopub.status.busy": "2024-06-07T11:38:34.023571Z",
     "iopub.status.idle": "2024-06-07T11:38:34.036214Z",
     "shell.execute_reply": "2024-06-07T11:38:34.035175Z"
    },
    "papermill": {
     "duration": 0.03341,
     "end_time": "2024-06-07T11:38:34.038436",
     "exception": false,
     "start_time": "2024-06-07T11:38:34.005026",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Female', 'Male'], dtype=object)"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Gender'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "a99dc4d1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:34.075824Z",
     "iopub.status.busy": "2024-06-07T11:38:34.074641Z",
     "iopub.status.idle": "2024-06-07T11:38:34.088415Z",
     "shell.execute_reply": "2024-06-07T11:38:34.087140Z"
    },
    "papermill": {
     "duration": 0.035058,
     "end_time": "2024-06-07T11:38:34.090984",
     "exception": false,
     "start_time": "2024-06-07T11:38:34.055926",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "data = df['Gender'].value_counts().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "261c887d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:34.128668Z",
     "iopub.status.busy": "2024-06-07T11:38:34.127647Z",
     "iopub.status.idle": "2024-06-07T11:38:34.137491Z",
     "shell.execute_reply": "2024-06-07T11:38:34.136350Z"
    },
    "papermill": {
     "duration": 0.030829,
     "end_time": "2024-06-07T11:38:34.139848",
     "exception": false,
     "start_time": "2024-06-07T11:38:34.109019",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Male</td>\n",
       "      <td>49598</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Female</td>\n",
       "      <td>49021</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Gender  count\n",
       "0    Male  49598\n",
       "1  Female  49021"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "386335d5",
   "metadata": {
    "papermill": {
     "duration": 0.017502,
     "end_time": "2024-06-07T11:38:34.175029",
     "exception": false,
     "start_time": "2024-06-07T11:38:34.157527",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "We have total no. of Males =  49598 &\n",
    "        total no. of Females =  49021"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "52106172",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:34.212982Z",
     "iopub.status.busy": "2024-06-07T11:38:34.212584Z",
     "iopub.status.idle": "2024-06-07T11:38:36.470901Z",
     "shell.execute_reply": "2024-06-07T11:38:36.469705Z"
    },
    "papermill": {
     "duration": 2.280647,
     "end_time": "2024-06-07T11:38:36.473604",
     "exception": false,
     "start_time": "2024-06-07T11:38:34.192957",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "        <script type=\"text/javascript\">\n",
       "        window.PlotlyConfig = {MathJaxConfig: 'local'};\n",
       "        if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\n",
       "        if (typeof require !== 'undefined') {\n",
       "        require.undef(\"plotly\");\n",
       "        requirejs.config({\n",
       "            paths: {\n",
       "                'plotly': ['https://cdn.plot.ly/plotly-2.27.0.min']\n",
       "            }\n",
       "        });\n",
       "        require(['plotly'], function(Plotly) {\n",
       "            window._Plotly = Plotly;\n",
       "        });\n",
       "        }\n",
       "        </script>\n",
       "        "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>                            <div id=\"314c5bf8-581a-4dcc-ba32-e7ff01626d22\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"314c5bf8-581a-4dcc-ba32-e7ff01626d22\")) {                    Plotly.newPlot(                        \"314c5bf8-581a-4dcc-ba32-e7ff01626d22\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Gender=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Male\",\"marker\":{\"color\":\"rgb(75, 41, 145)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Male\",\"offsetgroup\":\"Male\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Male\"],\"xaxis\":\"x\",\"y\":[49598],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Gender=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Female\",\"marker\":{\"color\":\"rgb(135, 44, 162)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Female\",\"offsetgroup\":\"Female\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Female\"],\"xaxis\":\"x\",\"y\":[49021],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"rgb(17,17,17)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"bar\":[{\"error_x\":{\"color\":\"#f2f5fa\"},\"error_y\":{\"color\":\"#f2f5fa\"},\"marker\":{\"line\":{\"color\":\"rgb(17,17,17)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#A2B1C6\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"minorgridcolor\":\"#506784\",\"startlinecolor\":\"#A2B1C6\"},\"baxis\":{\"endlinecolor\":\"#A2B1C6\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"minorgridcolor\":\"#506784\",\"startlinecolor\":\"#A2B1C6\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"line\":{\"color\":\"#283442\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatter\":[{\"marker\":{\"line\":{\"color\":\"#283442\"}},\"type\":\"scatter\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#506784\"},\"line\":{\"color\":\"rgb(17,17,17)\"}},\"header\":{\"fill\":{\"color\":\"#2a3f5f\"},\"line\":{\"color\":\"rgb(17,17,17)\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#f2f5fa\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#f2f5fa\"},\"geo\":{\"bgcolor\":\"rgb(17,17,17)\",\"lakecolor\":\"rgb(17,17,17)\",\"landcolor\":\"rgb(17,17,17)\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"#506784\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"dark\"},\"paper_bgcolor\":\"rgb(17,17,17)\",\"plot_bgcolor\":\"rgb(17,17,17)\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"bgcolor\":\"rgb(17,17,17)\",\"radialaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"},\"yaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"},\"zaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"}},\"shapedefaults\":{\"line\":{\"color\":\"#f2f5fa\"}},\"sliderdefaults\":{\"bgcolor\":\"#C8D4E3\",\"bordercolor\":\"rgb(17,17,17)\",\"borderwidth\":1,\"tickwidth\":0},\"ternary\":{\"aaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"bgcolor\":\"rgb(17,17,17)\",\"caxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"updatemenudefaults\":{\"bgcolor\":\"#506784\",\"borderwidth\":0},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"#283442\",\"linecolor\":\"#506784\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#283442\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"#283442\",\"linecolor\":\"#506784\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#283442\",\"zerolinewidth\":2}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"GENDER\"},\"categoryorder\":\"array\",\"categoryarray\":[\"Male\",\"Female\"]},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"COUNT\"}},\"legend\":{\"title\":{\"text\":\"Gender\"},\"tracegroupgap\":0},\"margin\":{\"t\":60},\"barmode\":\"relative\",\"title\":{\"text\":\"Number of Males & Females\"}},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('314c5bf8-581a-4dcc-ba32-e7ff01626d22');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#visualization\n",
    "\n",
    "fig=px.bar(data,x='Gender',y='count',color='Gender',color_discrete_sequence=px.colors.sequential.Agsunset,template = 'plotly_dark')\n",
    "\n",
    "fig.update_layout(title_text='Number of Males & Females', xaxis_title='GENDER', yaxis_title='COUNT')\n",
    "\n",
    "fig.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5ed4534c",
   "metadata": {
    "papermill": {
     "duration": 0.018295,
     "end_time": "2024-06-07T11:38:36.512834",
     "exception": false,
     "start_time": "2024-06-07T11:38:36.494539",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Number of males and females in the dataset are comparable."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "641de3b9",
   "metadata": {
    "papermill": {
     "duration": 0.017726,
     "end_time": "2024-06-07T11:38:36.548626",
     "exception": false,
     "start_time": "2024-06-07T11:38:36.530900",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Age "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "48974202",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:36.587467Z",
     "iopub.status.busy": "2024-06-07T11:38:36.587062Z",
     "iopub.status.idle": "2024-06-07T11:38:37.550947Z",
     "shell.execute_reply": "2024-06-07T11:38:37.549679Z"
    },
    "papermill": {
     "duration": 0.985973,
     "end_time": "2024-06-07T11:38:37.553125",
     "exception": false,
     "start_time": "2024-06-07T11:38:36.567152",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Age', ylabel='Density'>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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DHPmzOH6669n6dKlNDU1cdNNN3HFFVe0awWbiIiIDGyWJ0iXX345JSUlLFq0iMLCQiZNmsSqVau8k6xzcnJ8NrycOXMmr776Kvfddx/33nsvGRkZrFy50lsDCeDOO++kpqaGG264gYqKCk4//XRWrVrlrYEE8Morr3DTTTdx7rnnYrfb+e53v8vTTz/dey+8jwsMDOSBBx44ZlhROkfXs/vpmnYvXc/upevZ/Xr7mlpeB0lERESkr1HVQREREZGjKEESEREROYoSJBEREZGjKEESEREROYoSJDnGs88+S1paGkFBQWRmZrJ+/XqrQ+oXFi9ezCmnnEJ4eDjx8fHMnTuXXbt2+bSpr6/nxhtvJCYmhrCwML773e8eU/hUju83v/mNt5RHK13TjsnLy+MHP/gBMTExBAcHM378eDZs2OA9bxgGixYtIikpieDgYLKystizZ4+FEfddbreb+++/n/T0dIKDgxkxYgQPPfSQzx5fup4n9tFHH3HRRReRnJyMzWbz7qvaqj3Xr6ysjKuuuoqIiAgiIyO59tprcblcXY5NCZL4eO2111i4cCEPPPAAmzZtYuLEicyePfuYyuNyrA8//JAbb7yRzz77jNWrV9PU1MR5551HTU2Nt82tt97Kv/71L1asWMGHH35Ifn4+l17avTtVD1Sff/45zz//PBMmTPA5rmvafuXl5Zx22mn4+/vzzjvvsH37dpYsWUJUVJS3zWOPPcbTTz/N0qVLWbduHaGhocyePZv6+noLI++bHn30UZ577jmeeeYZduzYwaOPPspjjz3G73//e28bXc8Tq6mpYeLEiTz77LNtnm/P9bvqqqv46quvWL16NW+++SYfffQRN9xwQ9eDM0S+Zvr06caNN97o/d7tdhvJycnG4sWLLYyqfyouLjYA48MPPzQMwzAqKioMf39/Y8WKFd42O3bsMABj7dq1VoXZL1RXVxsZGRnG6tWrjVmzZhk333yzYRi6ph111113Gaeffvpxz3s8HiMxMdF4/PHHvccqKiqMwMBA4y9/+UtvhNivXHjhhcY111zjc+zSSy81rrrqKsMwdD07CjD+/ve/e79vz/Xbvn27ARiff/65t80777xj2Gw2Iy8vr0vxqAdJvBobG9m4cSNZWVneY3a7naysLNauXWthZP1TZWUlANHR0QBs3LiRpqYmn+s7evRoUlNTdX2/wY033siFF17oc+1A17Sj/vnPfzJt2jQuu+wy4uPjmTx5Mv/zP//jPZ+dnU1hYaHP9XQ6nWRmZup6tmHmzJmsWbOG3bt3A7B161Y+/vhjzj//fEDXs6vac/3Wrl1LZGQk06ZN87bJysrCbrezbt26Lj2/5ZW0pe8oLS3F7XZ7q5i3SkhIYOfOnRZF1T95PB5uueUWTjvtNG+V98LCQgICAo7Z5DghIYHCwkILouwfli9fzqZNm/j888+POadr2jH79+/nueeeY+HChdx77718/vnn/PznPycgIID58+d7r1lbfwN0PY919913U1VVxejRo3E4HLjdbh555BGuuuoqAF3PLmrP9SssLCQ+Pt7nvJ+fH9HR0V2+xkqQRHrAjTfeyLZt2/j444+tDqVfy83N5eabb2b16tU+WwVJ53g8HqZNm8avf/1rACZPnsy2bdtYunQp8+fPtzi6/uevf/0rr7zyCq+++ionn3wyW7Zs4ZZbbiE5OVnXcwDQEJt4xcbG4nA4jlkBVFRURGJiokVR9T833XQTb775Ju+//z5Dhw71Hk9MTKSxsZGKigqf9rq+x7dx40aKi4uZMmUKfn5++Pn58eGHH/L000/j5+dHQkKCrmkHJCUlMXbsWJ9jY8aMIScnB8B7zfQ3oH3uuOMO7r77bq644grGjx/PD3/4Q2699Vbv5uq6nl3TnuuXmJh4zCKi5uZmysrKunyNlSCJV0BAAFOnTmXNmjXeYx6PhzVr1jBjxgwLI+sfDMPgpptu4u9//zvvvfce6enpPuenTp2Kv7+/z/XdtWsXOTk5ur7Hce655/Lll1+yZcsW723atGlcddVV3n/rmrbfaaeddkzpid27dzNs2DAA0tPTSUxM9LmeVVVVrFu3TtezDbW1tT6bqQM4HA48Hg+g69lV7bl+M2bMoKKigo0bN3rbvPfee3g8HjIzM7sWQJemeMuAs3z5ciMwMNBYtmyZsX37duOGG24wIiMjjcLCQqtD6/N+8pOfGE6n0/jggw+MgoIC7622ttbb5sc//rGRmppqvPfee8aGDRuMGTNmGDNmzLAw6v7n66vYDEPXtCPWr19v+Pn5GY888oixZ88e45VXXjFCQkKMP//5z942v/nNb4zIyEjjH//4h/HFF18YF198sZGenm7U1dVZGHnfNH/+fGPIkCHGm2++aWRnZxtvvPGGERsba9x5553eNrqeJ1ZdXW1s3rzZ2Lx5swEYTz75pLF582bj4MGDhmG07/rNmTPHmDx5srFu3Trj448/NjIyMowrr7yyy7EpQZJj/P73vzdSU1ONgIAAY/r06cZnn31mdUj9AtDm7aWXXvK2qaurM376058aUVFRRkhIiHHJJZcYBQUF1gXdDx2dIOmadsy//vUvY9y4cUZgYKAxevRo44UXXvA57/F4jPvvv99ISEgwAgMDjXPPPdfYtWuXRdH2bVVVVcbNN99spKamGkFBQcbw4cONX/ziF0ZDQ4O3ja7nib3//vtt/t2cP3++YRjtu36HDx82rrzySiMsLMyIiIgwFixYYFRXV3c5NpthfK3kp4iIiIhoDpKIiIjI0ZQgiYiIiBxFCZKIiIjIUZQgiYiIiBxFCZKIiIjIUZQgiYiIiBxFCZKIiIjIUZQgiYiIiBxFCZKIiIjIUZQgicigsXbtWhwOBxdeeKHVoYhIH6etRkRk0LjuuusICwvjj3/8I7t27SI5OdnqkESkj1IPkogMCi6Xi9dee42f/OQnXHjhhSxbtszn/D//+U8yMjIICgri7LPP5k9/+hM2m42Kigpvm48//pgzzjiD4OBgUlJS+PnPf05NTU3vvhAR6RVKkERkUPjrX//K6NGjGTVqFD/4wQ948cUXae1Az87O5nvf+x5z585l69at/OhHP+IXv/iFz/337dvHnDlz+O53v8sXX3zBa6+9xscff8xNN91kxcsRkR6mITYRGRROO+00vv/973PzzTfT3NxMUlISK1as4KyzzuLuu+/mrbfe4ssvv/S2v++++3jkkUcoLy8nMjKS6667DofDwfPPP+9t8/HHHzNr1ixqamoICgqy4mWJSA9RD5KIDHi7du1i/fr1XHnllQD4+flx+eWX88c//tF7/pRTTvG5z/Tp032+37p1K8uWLSMsLMx7mz17Nh6Ph+zs7N55ISLSa/ysDkBEpKf98Y9/pLm52WdStmEYBAYG8swzz7TrMVwuFz/60Y/4+c9/fsy51NTUbotVRPoGJUgiMqA1Nzfz8ssvs2TJEs477zyfc3PnzuUvf/kLo0aN4u233/Y59/nnn/t8P2XKFLZv387IkSN7PGYRsZ7mIInIgLZy5Uouv/xyiouLcTqdPufuuusu3nvvPf76178yatQobr31Vq699lq2bNnCbbfdxqFDh6ioqMDpdPLFF19w6qmncs0113DdddcRGhrK9u3bWb16dbt7oUSk/9AcJBEZ0P74xz+SlZV1THIE8N3vfpcNGzZQXV3N66+/zhtvvMGECRN47rnnvKvYAgMDAZgwYQIffvghu3fv5owzzmDy5MksWrRItZREBij1IImItOGRRx5h6dKl5ObmWh2KiFhAc5BERIA//OEPnHLKKcTExPDJJ5/w+OOPq8aRyCCmBElEBNizZw8PP/wwZWVlpKamctttt3HPPfdYHZaIWERDbCIiIiJH0SRtERERkaMoQRIRERE5ihIkERERkaMoQRIRERE5ihIkERERkaMoQRIRERE5ihIkERERkaMoQRIRERE5yv8HhUjGQRSXnyUAAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from seaborn import kdeplot\n",
    "kdeplot(data=df, x='Age', hue='Gender')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "860a4012",
   "metadata": {
    "papermill": {
     "duration": 0.018906,
     "end_time": "2024-06-07T11:38:37.591416",
     "exception": false,
     "start_time": "2024-06-07T11:38:37.572510",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "A Kernel Density Estimate (KDE) plot is a statistical tool used to visualize the probability density of a continuous variable."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0d7626ca",
   "metadata": {
    "papermill": {
     "duration": 0.018616,
     "end_time": "2024-06-07T11:38:37.628988",
     "exception": false,
     "start_time": "2024-06-07T11:38:37.610372",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Nationality"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "ec734f81",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:37.669696Z",
     "iopub.status.busy": "2024-06-07T11:38:37.669264Z",
     "iopub.status.idle": "2024-06-07T11:38:37.684810Z",
     "shell.execute_reply": "2024-06-07T11:38:37.683599Z"
    },
    "papermill": {
     "duration": 0.038643,
     "end_time": "2024-06-07T11:38:37.687478",
     "exception": false,
     "start_time": "2024-06-07T11:38:37.648835",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Japan', 'Nicaragua', 'Russia', 'China', 'Brazil', 'Ivory Coast',\n",
       "       'Vietnam', 'Palestinian Territory', 'Thailand', 'Tunisia',\n",
       "       'Sweden', 'Colombia', 'Greece', 'Philippines', 'Ukraine',\n",
       "       'Indonesia', 'Croatia', 'Democratic Republic of the Congo',\n",
       "       'France', 'Peru', 'Latvia', 'Germany', 'Czech Republic', 'Ireland',\n",
       "       'Iran', 'Madagascar', 'United States', 'Ghana', 'Mali',\n",
       "       'Guatemala', 'Kyrgyzstan', 'Haiti', 'Afghanistan', 'Ethiopia',\n",
       "       'Tanzania', 'Nigeria', 'Cameroon', 'Morocco', 'Armenia', 'Mexico',\n",
       "       'Chile', 'Albania', 'Luxembourg', 'Honduras', 'Portugal',\n",
       "       'Kazakhstan', 'Pakistan', 'Poland', 'South Africa', 'Kenya',\n",
       "       'Serbia', 'Maldives', 'Argentina', 'Uruguay', 'Netherlands',\n",
       "       'Botswana', 'Egypt', 'Syria', 'Myanmar', 'Slovenia', 'Spain',\n",
       "       'Macedonia', 'Mongolia', 'Yemen', 'Benin', 'Laos', 'Norway',\n",
       "       'Sao Tome and Principe', 'Venezuela', 'United Kingdom', 'Denmark',\n",
       "       'Dominican Republic', 'North Korea', 'Bangladesh', 'Mozambique',\n",
       "       'Bosnia and Herzegovina', 'Canada', 'Lithuania', 'Sri Lanka',\n",
       "       'Belarus', 'Niger', 'Uzbekistan', 'Malaysia', 'Sierra Leone',\n",
       "       'Moldova', 'Switzerland', 'Nepal', 'Belgium', 'Iraq', 'Finland',\n",
       "       'Uganda', 'Azerbaijan', 'East Timor', 'Marshall Islands',\n",
       "       'Georgia', 'Gabon', 'New Caledonia', 'South Korea',\n",
       "       'Central African Republic', 'Guinea-Bissau', 'Paraguay',\n",
       "       'Suriname', 'Jamaica', 'Saint Lucia', 'Israel', 'Zambia',\n",
       "       'Turkmenistan', 'Burkina Faso', 'Jordan', 'New Zealand', 'Libya',\n",
       "       'Mauritius', 'Somalia', 'Kiribati', 'Ecuador', 'Namibia',\n",
       "       'Estonia', 'Guam', 'Costa Rica', 'Palau', 'Angola', 'Austria',\n",
       "       'Tajikistan', 'Oman', 'Cyprus', 'French Guiana', 'Sudan',\n",
       "       'Montenegro', 'Lebanon', 'Australia', 'Republic of the Congo',\n",
       "       'Cuba', 'Malta', 'Saudi Arabia', 'Italy', 'Romania', 'Dominica',\n",
       "       'Bhutan', 'Western Sahara', 'Guinea', 'Panama', 'Bolivia', 'Samoa',\n",
       "       'Comoros', 'Kosovo', 'Bulgaria', 'Cambodia', 'Liechtenstein',\n",
       "       'Bahamas', 'Kuwait', 'Zimbabwe', 'Hungary', 'Taiwan', 'Iceland',\n",
       "       'French Polynesia', 'Cape Verde', 'Lesotho', 'Cocos Islands',\n",
       "       'Saint Kitts and Nevis', 'Chad', 'El Salvador', 'Bahrain',\n",
       "       'Reunion', 'Christmas Island', 'Mauritania', 'Trinidad and Tobago',\n",
       "       'Guadeloupe', 'Bermuda', 'Equatorial Guinea', 'Solomon Islands',\n",
       "       'Senegal', 'Turkey', 'Papua New Guinea', 'Antigua and Barbuda',\n",
       "       'Nauru', 'Togo', 'Slovakia', 'Guyana', 'Liberia',\n",
       "       'United Arab Emirates', 'Micronesia', 'Norfolk Island', 'Qatar',\n",
       "       'Gambia', 'Malawi', 'Djibouti', 'Singapore', 'Cayman Islands',\n",
       "       'Anguilla', 'Aruba', 'South Sudan', 'Curacao', 'Fiji',\n",
       "       'Puerto Rico', 'Hong Kong', 'Faroe Islands', 'Aland Islands',\n",
       "       'Burundi', 'Eritrea', 'San Marino', 'Vanuatu', 'Mayotte', 'India',\n",
       "       'Algeria', 'Andorra', 'U.S. Virgin Islands', 'Belize', 'Grenada',\n",
       "       'Monaco', 'Seychelles', 'Jersey', 'Barbados',\n",
       "       'Saint Vincent and the Grenadines', 'Martinique', 'American Samoa',\n",
       "       'South Georgia and the South Sandwich Islands', 'Tuvalu',\n",
       "       'Isle of Man', 'Niue', 'Saint Helena', 'Montserrat',\n",
       "       'Cook Islands', 'Swaziland', 'Svalbard and Jan Mayen',\n",
       "       'Falkland Islands', 'Saint Pierre and Miquelon',\n",
       "       'Wallis and Futuna', 'French Southern Territories',\n",
       "       'Bonaire, Saint Eustatius and Saba ', 'Rwanda', 'Tokelau', 'Tonga',\n",
       "       'Macao', 'Saint Martin', 'Pitcairn', 'Northern Mariana Islands',\n",
       "       'Greenland', 'Brunei', 'British Virgin Islands', 'Sint Maarten'],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Nationality'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "93cd524d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:37.727980Z",
     "iopub.status.busy": "2024-06-07T11:38:37.727518Z",
     "iopub.status.idle": "2024-06-07T11:38:37.742965Z",
     "shell.execute_reply": "2024-06-07T11:38:37.741607Z"
    },
    "papermill": {
     "duration": 0.03909,
     "end_time": "2024-06-07T11:38:37.745683",
     "exception": false,
     "start_time": "2024-06-07T11:38:37.706593",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "240"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Nationality'].nunique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b3adc429",
   "metadata": {
    "papermill": {
     "duration": 0.020764,
     "end_time": "2024-06-07T11:38:37.785852",
     "exception": false,
     "start_time": "2024-06-07T11:38:37.765088",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Here are 240 different Nationalities "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "2cbfb8e1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:37.826909Z",
     "iopub.status.busy": "2024-06-07T11:38:37.826450Z",
     "iopub.status.idle": "2024-06-07T11:38:37.840290Z",
     "shell.execute_reply": "2024-06-07T11:38:37.839134Z"
    },
    "papermill": {
     "duration": 0.037517,
     "end_time": "2024-06-07T11:38:37.842797",
     "exception": false,
     "start_time": "2024-06-07T11:38:37.805280",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "nation_count=df['Nationality'].value_counts().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "a040a1e2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:37.887412Z",
     "iopub.status.busy": "2024-06-07T11:38:37.886995Z",
     "iopub.status.idle": "2024-06-07T11:38:37.899419Z",
     "shell.execute_reply": "2024-06-07T11:38:37.898222Z"
    },
    "papermill": {
     "duration": 0.037496,
     "end_time": "2024-06-07T11:38:37.902035",
     "exception": false,
     "start_time": "2024-06-07T11:38:37.864539",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Nationality</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>China</td>\n",
       "      <td>18317</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Indonesia</td>\n",
       "      <td>10559</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Russia</td>\n",
       "      <td>5693</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Philippines</td>\n",
       "      <td>5239</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Brazil</td>\n",
       "      <td>3791</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>235</th>\n",
       "      <td>Romania</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>236</th>\n",
       "      <td>British Virgin Islands</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>237</th>\n",
       "      <td>Jersey</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238</th>\n",
       "      <td>Norfolk Island</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>239</th>\n",
       "      <td>Sint Maarten</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>240 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                Nationality  count\n",
       "0                     China  18317\n",
       "1                 Indonesia  10559\n",
       "2                    Russia   5693\n",
       "3               Philippines   5239\n",
       "4                    Brazil   3791\n",
       "..                      ...    ...\n",
       "235                 Romania      2\n",
       "236  British Virgin Islands      2\n",
       "237                  Jersey      1\n",
       "238          Norfolk Island      1\n",
       "239            Sint Maarten      1\n",
       "\n",
       "[240 rows x 2 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nation_count"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "5f053e82",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:37.944696Z",
     "iopub.status.busy": "2024-06-07T11:38:37.943662Z",
     "iopub.status.idle": "2024-06-07T11:38:37.956975Z",
     "shell.execute_reply": "2024-06-07T11:38:37.955831Z"
    },
    "papermill": {
     "duration": 0.036309,
     "end_time": "2024-06-07T11:38:37.959123",
     "exception": false,
     "start_time": "2024-06-07T11:38:37.922814",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Nationality</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>China</td>\n",
       "      <td>18317</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Indonesia</td>\n",
       "      <td>10559</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Russia</td>\n",
       "      <td>5693</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Philippines</td>\n",
       "      <td>5239</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Brazil</td>\n",
       "      <td>3791</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Portugal</td>\n",
       "      <td>3299</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Poland</td>\n",
       "      <td>3245</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>France</td>\n",
       "      <td>2907</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Sweden</td>\n",
       "      <td>2397</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>United States</td>\n",
       "      <td>2105</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Nationality  count\n",
       "0          China  18317\n",
       "1      Indonesia  10559\n",
       "2         Russia   5693\n",
       "3    Philippines   5239\n",
       "4         Brazil   3791\n",
       "5       Portugal   3299\n",
       "6         Poland   3245\n",
       "7         France   2907\n",
       "8         Sweden   2397\n",
       "9  United States   2105"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Getting the top 10 Nationalities \n",
    "top_10_countries=nation_count.nlargest(10,'count')\n",
    "top_10_countries.reset_index()\n",
    "top_10_countries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "cb9cf421",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:38.000288Z",
     "iopub.status.busy": "2024-06-07T11:38:37.999931Z",
     "iopub.status.idle": "2024-06-07T11:38:38.100569Z",
     "shell.execute_reply": "2024-06-07T11:38:38.099593Z"
    },
    "papermill": {
     "duration": 0.124096,
     "end_time": "2024-06-07T11:38:38.102830",
     "exception": false,
     "start_time": "2024-06-07T11:38:37.978734",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>                            <div id=\"72902599-8124-4cbd-8854-12abe97b8d40\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"72902599-8124-4cbd-8854-12abe97b8d40\")) {                    Plotly.newPlot(                        \"72902599-8124-4cbd-8854-12abe97b8d40\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Nationality=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"China\",\"marker\":{\"color\":\"rgb(75, 41, 145)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"China\",\"offsetgroup\":\"China\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"China\"],\"xaxis\":\"x\",\"y\":[18317],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Nationality=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Indonesia\",\"marker\":{\"color\":\"rgb(135, 44, 162)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Indonesia\",\"offsetgroup\":\"Indonesia\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Indonesia\"],\"xaxis\":\"x\",\"y\":[10559],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Nationality=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Russia\",\"marker\":{\"color\":\"rgb(192, 54, 157)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Russia\",\"offsetgroup\":\"Russia\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Russia\"],\"xaxis\":\"x\",\"y\":[5693],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Nationality=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Philippines\",\"marker\":{\"color\":\"rgb(234, 79, 136)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Philippines\",\"offsetgroup\":\"Philippines\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Philippines\"],\"xaxis\":\"x\",\"y\":[5239],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Nationality=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Brazil\",\"marker\":{\"color\":\"rgb(250, 120, 118)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Brazil\",\"offsetgroup\":\"Brazil\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Brazil\"],\"xaxis\":\"x\",\"y\":[3791],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Nationality=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Portugal\",\"marker\":{\"color\":\"rgb(246, 169, 122)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Portugal\",\"offsetgroup\":\"Portugal\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Portugal\"],\"xaxis\":\"x\",\"y\":[3299],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Nationality=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Poland\",\"marker\":{\"color\":\"rgb(237, 217, 163)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Poland\",\"offsetgroup\":\"Poland\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Poland\"],\"xaxis\":\"x\",\"y\":[3245],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Nationality=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"France\",\"marker\":{\"color\":\"rgb(75, 41, 145)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"France\",\"offsetgroup\":\"France\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"France\"],\"xaxis\":\"x\",\"y\":[2907],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Nationality=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Sweden\",\"marker\":{\"color\":\"rgb(135, 44, 162)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Sweden\",\"offsetgroup\":\"Sweden\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Sweden\"],\"xaxis\":\"x\",\"y\":[2397],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Nationality=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"United States\",\"marker\":{\"color\":\"rgb(192, 54, 157)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"United States\",\"offsetgroup\":\"United States\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"United States\"],\"xaxis\":\"x\",\"y\":[2105],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"rgb(17,17,17)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"bar\":[{\"error_x\":{\"color\":\"#f2f5fa\"},\"error_y\":{\"color\":\"#f2f5fa\"},\"marker\":{\"line\":{\"color\":\"rgb(17,17,17)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#A2B1C6\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"minorgridcolor\":\"#506784\",\"startlinecolor\":\"#A2B1C6\"},\"baxis\":{\"endlinecolor\":\"#A2B1C6\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"minorgridcolor\":\"#506784\",\"startlinecolor\":\"#A2B1C6\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"line\":{\"color\":\"#283442\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatter\":[{\"marker\":{\"line\":{\"color\":\"#283442\"}},\"type\":\"scatter\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#506784\"},\"line\":{\"color\":\"rgb(17,17,17)\"}},\"header\":{\"fill\":{\"color\":\"#2a3f5f\"},\"line\":{\"color\":\"rgb(17,17,17)\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#f2f5fa\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#f2f5fa\"},\"geo\":{\"bgcolor\":\"rgb(17,17,17)\",\"lakecolor\":\"rgb(17,17,17)\",\"landcolor\":\"rgb(17,17,17)\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"#506784\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"dark\"},\"paper_bgcolor\":\"rgb(17,17,17)\",\"plot_bgcolor\":\"rgb(17,17,17)\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"bgcolor\":\"rgb(17,17,17)\",\"radialaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"},\"yaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"},\"zaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"}},\"shapedefaults\":{\"line\":{\"color\":\"#f2f5fa\"}},\"sliderdefaults\":{\"bgcolor\":\"#C8D4E3\",\"bordercolor\":\"rgb(17,17,17)\",\"borderwidth\":1,\"tickwidth\":0},\"ternary\":{\"aaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"bgcolor\":\"rgb(17,17,17)\",\"caxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"updatemenudefaults\":{\"bgcolor\":\"#506784\",\"borderwidth\":0},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"#283442\",\"linecolor\":\"#506784\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#283442\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"#283442\",\"linecolor\":\"#506784\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#283442\",\"zerolinewidth\":2}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Nationality\"},\"categoryorder\":\"array\",\"categoryarray\":[\"China\",\"Indonesia\",\"Russia\",\"Philippines\",\"Brazil\",\"Portugal\",\"Poland\",\"France\",\"Sweden\",\"United States\"]},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"count\"}},\"legend\":{\"title\":{\"text\":\"Nationality\"},\"tracegroupgap\":0},\"margin\":{\"t\":60},\"barmode\":\"relative\"},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('72902599-8124-4cbd-8854-12abe97b8d40');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Let's visualise top 10 Nationalities \n",
    "px.bar(top_10_countries, x='Nationality', y = 'count',color='Nationality',color_discrete_sequence=px.colors.sequential.Agsunset  ,template = 'plotly_dark')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "c2ad18aa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:38.143842Z",
     "iopub.status.busy": "2024-06-07T11:38:38.143436Z",
     "iopub.status.idle": "2024-06-07T11:38:38.157031Z",
     "shell.execute_reply": "2024-06-07T11:38:38.155873Z"
    },
    "papermill": {
     "duration": 0.037056,
     "end_time": "2024-06-07T11:38:38.159571",
     "exception": false,
     "start_time": "2024-06-07T11:38:38.122515",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Nationality</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>237</th>\n",
       "      <td>Jersey</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>238</th>\n",
       "      <td>Norfolk Island</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>239</th>\n",
       "      <td>Sint Maarten</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>228</th>\n",
       "      <td>French Southern Territories</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>229</th>\n",
       "      <td>Svalbard and Jan Mayen</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>230</th>\n",
       "      <td>Saint Helena</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>231</th>\n",
       "      <td>Macao</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>232</th>\n",
       "      <td>Saint Martin</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>233</th>\n",
       "      <td>Cook Islands</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>234</th>\n",
       "      <td>Cocos Islands</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     Nationality  count\n",
       "237                       Jersey      1\n",
       "238               Norfolk Island      1\n",
       "239                 Sint Maarten      1\n",
       "228  French Southern Territories      2\n",
       "229       Svalbard and Jan Mayen      2\n",
       "230                 Saint Helena      2\n",
       "231                        Macao      2\n",
       "232                 Saint Martin      2\n",
       "233                 Cook Islands      2\n",
       "234                Cocos Islands      2"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Lowest top 10 Nationalities \n",
    "\n",
    "lowest_10_countries=nation_count.nsmallest(10,'count')\n",
    "lowest_10_countries.reset_index()\n",
    "lowest_10_countries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "4df1d077",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:38.203543Z",
     "iopub.status.busy": "2024-06-07T11:38:38.203089Z",
     "iopub.status.idle": "2024-06-07T11:38:38.316218Z",
     "shell.execute_reply": "2024-06-07T11:38:38.315056Z"
    },
    "papermill": {
     "duration": 0.137851,
     "end_time": "2024-06-07T11:38:38.319371",
     "exception": false,
     "start_time": "2024-06-07T11:38:38.181520",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>                            <div id=\"4d0c1eea-6676-4d4d-b733-ebd064fc4ae3\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"4d0c1eea-6676-4d4d-b733-ebd064fc4ae3\")) {                    Plotly.newPlot(                        \"4d0c1eea-6676-4d4d-b733-ebd064fc4ae3\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Nationality=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Jersey\",\"marker\":{\"color\":\"rgb(75, 41, 145)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Jersey\",\"offsetgroup\":\"Jersey\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Jersey\"],\"xaxis\":\"x\",\"y\":[1],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Nationality=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Norfolk Island\",\"marker\":{\"color\":\"rgb(135, 44, 162)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Norfolk Island\",\"offsetgroup\":\"Norfolk Island\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Norfolk Island\"],\"xaxis\":\"x\",\"y\":[1],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Nationality=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Sint Maarten\",\"marker\":{\"color\":\"rgb(192, 54, 157)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Sint Maarten\",\"offsetgroup\":\"Sint Maarten\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Sint Maarten\"],\"xaxis\":\"x\",\"y\":[1],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Nationality=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"French Southern Territories\",\"marker\":{\"color\":\"rgb(234, 79, 136)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"French Southern Territories\",\"offsetgroup\":\"French Southern Territories\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"French Southern Territories\"],\"xaxis\":\"x\",\"y\":[2],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Nationality=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Svalbard and Jan Mayen\",\"marker\":{\"color\":\"rgb(250, 120, 118)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Svalbard and Jan Mayen\",\"offsetgroup\":\"Svalbard and Jan Mayen\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Svalbard and Jan Mayen\"],\"xaxis\":\"x\",\"y\":[2],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Nationality=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Saint Helena\",\"marker\":{\"color\":\"rgb(246, 169, 122)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Saint Helena\",\"offsetgroup\":\"Saint Helena\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Saint Helena\"],\"xaxis\":\"x\",\"y\":[2],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Nationality=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Macao\",\"marker\":{\"color\":\"rgb(237, 217, 163)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Macao\",\"offsetgroup\":\"Macao\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Macao\"],\"xaxis\":\"x\",\"y\":[2],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Nationality=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Saint Martin\",\"marker\":{\"color\":\"rgb(75, 41, 145)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Saint Martin\",\"offsetgroup\":\"Saint Martin\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Saint Martin\"],\"xaxis\":\"x\",\"y\":[2],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Nationality=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Cook Islands\",\"marker\":{\"color\":\"rgb(135, 44, 162)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Cook Islands\",\"offsetgroup\":\"Cook Islands\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Cook Islands\"],\"xaxis\":\"x\",\"y\":[2],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Nationality=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Cocos Islands\",\"marker\":{\"color\":\"rgb(192, 54, 157)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Cocos Islands\",\"offsetgroup\":\"Cocos Islands\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Cocos Islands\"],\"xaxis\":\"x\",\"y\":[2],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"rgb(17,17,17)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"bar\":[{\"error_x\":{\"color\":\"#f2f5fa\"},\"error_y\":{\"color\":\"#f2f5fa\"},\"marker\":{\"line\":{\"color\":\"rgb(17,17,17)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#A2B1C6\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"minorgridcolor\":\"#506784\",\"startlinecolor\":\"#A2B1C6\"},\"baxis\":{\"endlinecolor\":\"#A2B1C6\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"minorgridcolor\":\"#506784\",\"startlinecolor\":\"#A2B1C6\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"line\":{\"color\":\"#283442\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatter\":[{\"marker\":{\"line\":{\"color\":\"#283442\"}},\"type\":\"scatter\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#506784\"},\"line\":{\"color\":\"rgb(17,17,17)\"}},\"header\":{\"fill\":{\"color\":\"#2a3f5f\"},\"line\":{\"color\":\"rgb(17,17,17)\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#f2f5fa\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#f2f5fa\"},\"geo\":{\"bgcolor\":\"rgb(17,17,17)\",\"lakecolor\":\"rgb(17,17,17)\",\"landcolor\":\"rgb(17,17,17)\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"#506784\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"dark\"},\"paper_bgcolor\":\"rgb(17,17,17)\",\"plot_bgcolor\":\"rgb(17,17,17)\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"bgcolor\":\"rgb(17,17,17)\",\"radialaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"},\"yaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"},\"zaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"}},\"shapedefaults\":{\"line\":{\"color\":\"#f2f5fa\"}},\"sliderdefaults\":{\"bgcolor\":\"#C8D4E3\",\"bordercolor\":\"rgb(17,17,17)\",\"borderwidth\":1,\"tickwidth\":0},\"ternary\":{\"aaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"bgcolor\":\"rgb(17,17,17)\",\"caxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"updatemenudefaults\":{\"bgcolor\":\"#506784\",\"borderwidth\":0},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"#283442\",\"linecolor\":\"#506784\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#283442\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"#283442\",\"linecolor\":\"#506784\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#283442\",\"zerolinewidth\":2}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Nationality\"},\"categoryorder\":\"array\",\"categoryarray\":[\"Jersey\",\"Norfolk Island\",\"Sint Maarten\",\"French Southern Territories\",\"Svalbard and Jan Mayen\",\"Saint Helena\",\"Macao\",\"Saint Martin\",\"Cook Islands\",\"Cocos Islands\"]},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"count\"}},\"legend\":{\"title\":{\"text\":\"Nationality\"},\"tracegroupgap\":0},\"margin\":{\"t\":60},\"barmode\":\"relative\"},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('4d0c1eea-6676-4d4d-b733-ebd064fc4ae3');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Let's visualise Lowest number of Passanger Nationalities\n",
    "px.bar(lowest_10_countries,x='Nationality',y='count',color='Nationality',color_discrete_sequence=px.colors.sequential.Agsunset  ,template = 'plotly_dark')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "18fd256a",
   "metadata": {
    "papermill": {
     "duration": 0.02225,
     "end_time": "2024-06-07T11:38:38.364536",
     "exception": false,
     "start_time": "2024-06-07T11:38:38.342286",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Airport Name (Boarding Airport)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "c0346a0b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:38.408516Z",
     "iopub.status.busy": "2024-06-07T11:38:38.408010Z",
     "iopub.status.idle": "2024-06-07T11:38:38.428954Z",
     "shell.execute_reply": "2024-06-07T11:38:38.427479Z"
    },
    "papermill": {
     "duration": 0.046635,
     "end_time": "2024-06-07T11:38:38.431993",
     "exception": false,
     "start_time": "2024-06-07T11:38:38.385358",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Coldfoot Airport', 'Kugluktuk Airport', 'Grenoble-Isère Airport',\n",
       "       ..., 'Camaxilo Airport', 'Babelthuap Airport',\n",
       "       'Westchester County Airport'], dtype=object)"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Airport Name'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "dd313e2f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:38.475649Z",
     "iopub.status.busy": "2024-06-07T11:38:38.475262Z",
     "iopub.status.idle": "2024-06-07T11:38:38.495026Z",
     "shell.execute_reply": "2024-06-07T11:38:38.493870Z"
    },
    "papermill": {
     "duration": 0.044607,
     "end_time": "2024-06-07T11:38:38.497569",
     "exception": false,
     "start_time": "2024-06-07T11:38:38.452962",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "9062"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Airport Name'].nunique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a1e4ce64",
   "metadata": {
    "papermill": {
     "duration": 0.021163,
     "end_time": "2024-06-07T11:38:38.540013",
     "exception": false,
     "start_time": "2024-06-07T11:38:38.518850",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "There are 9062 unique airport entries from where the passengers took the flight."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "39c6a57b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:38.584533Z",
     "iopub.status.busy": "2024-06-07T11:38:38.584138Z",
     "iopub.status.idle": "2024-06-07T11:38:38.611172Z",
     "shell.execute_reply": "2024-06-07T11:38:38.609840Z"
    },
    "papermill": {
     "duration": 0.052152,
     "end_time": "2024-06-07T11:38:38.613891",
     "exception": false,
     "start_time": "2024-06-07T11:38:38.561739",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Airport Name</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>San Pedro Airport</td>\n",
       "      <td>43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Santa Maria Airport</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Böblingen Flugfeld</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Santa Ana Airport</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>San Fernando Airport</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9057</th>\n",
       "      <td>Balıkesir Merkez Airport</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9058</th>\n",
       "      <td>Arkalyk North Airport</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9059</th>\n",
       "      <td>Juba International Airport</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9060</th>\n",
       "      <td>Falcon State Airport</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9061</th>\n",
       "      <td>Hiroshima Airport</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>9062 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                    Airport Name  count\n",
       "0              San Pedro Airport     43\n",
       "1            Santa Maria Airport     38\n",
       "2             Böblingen Flugfeld     36\n",
       "3              Santa Ana Airport     35\n",
       "4           San Fernando Airport     31\n",
       "...                          ...    ...\n",
       "9057    Balıkesir Merkez Airport      2\n",
       "9058       Arkalyk North Airport      2\n",
       "9059  Juba International Airport      2\n",
       "9060        Falcon State Airport      1\n",
       "9061           Hiroshima Airport      1\n",
       "\n",
       "[9062 rows x 2 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "airport_name=df['Airport Name'].value_counts().reset_index()\n",
    "airport_name"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "0c9bda9a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:38.669860Z",
     "iopub.status.busy": "2024-06-07T11:38:38.669432Z",
     "iopub.status.idle": "2024-06-07T11:38:38.685162Z",
     "shell.execute_reply": "2024-06-07T11:38:38.683356Z"
    },
    "papermill": {
     "duration": 0.042704,
     "end_time": "2024-06-07T11:38:38.688024",
     "exception": false,
     "start_time": "2024-06-07T11:38:38.645320",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Airport Name</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>San Pedro Airport</td>\n",
       "      <td>43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Santa Maria Airport</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Böblingen Flugfeld</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Santa Ana Airport</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>San Fernando Airport</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Mae Hong Son Airport</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Capital City Airport</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Cochrane Airport</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Santa Rosa Airport</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Bathurst Airport</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Airport Name  count\n",
       "0     San Pedro Airport     43\n",
       "1   Santa Maria Airport     38\n",
       "2    Böblingen Flugfeld     36\n",
       "3     Santa Ana Airport     35\n",
       "4  San Fernando Airport     31\n",
       "5  Mae Hong Son Airport     29\n",
       "6  Capital City Airport     28\n",
       "7      Cochrane Airport     28\n",
       "8    Santa Rosa Airport     28\n",
       "9      Bathurst Airport     27"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Getting the top 10 airports with the highest number of passengers\n",
    "\n",
    "top10_airport = airport_name.nlargest(10,'count')\n",
    "top10_airport"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "f221d83c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:38.734274Z",
     "iopub.status.busy": "2024-06-07T11:38:38.733870Z",
     "iopub.status.idle": "2024-06-07T11:38:38.845229Z",
     "shell.execute_reply": "2024-06-07T11:38:38.844087Z"
    },
    "papermill": {
     "duration": 0.137269,
     "end_time": "2024-06-07T11:38:38.847937",
     "exception": false,
     "start_time": "2024-06-07T11:38:38.710668",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>                            <div id=\"c3ab8e3b-08b5-4ae4-8ced-268e4938820c\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"c3ab8e3b-08b5-4ae4-8ced-268e4938820c\")) {                    Plotly.newPlot(                        \"c3ab8e3b-08b5-4ae4-8ced-268e4938820c\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Airport Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"San Pedro Airport\",\"marker\":{\"color\":\"rgb(75, 41, 145)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"San Pedro Airport\",\"offsetgroup\":\"San Pedro Airport\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[43],\"xaxis\":\"x\",\"y\":[\"San Pedro Airport\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Airport Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Santa Maria Airport\",\"marker\":{\"color\":\"rgb(135, 44, 162)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Santa Maria Airport\",\"offsetgroup\":\"Santa Maria Airport\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[38],\"xaxis\":\"x\",\"y\":[\"Santa Maria Airport\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Airport Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Böblingen Flugfeld\",\"marker\":{\"color\":\"rgb(192, 54, 157)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Böblingen Flugfeld\",\"offsetgroup\":\"Böblingen Flugfeld\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[36],\"xaxis\":\"x\",\"y\":[\"Böblingen Flugfeld\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Airport Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Santa Ana Airport\",\"marker\":{\"color\":\"rgb(234, 79, 136)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Santa Ana Airport\",\"offsetgroup\":\"Santa Ana Airport\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[35],\"xaxis\":\"x\",\"y\":[\"Santa Ana Airport\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Airport Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"San Fernando Airport\",\"marker\":{\"color\":\"rgb(250, 120, 118)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"San Fernando Airport\",\"offsetgroup\":\"San Fernando Airport\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[31],\"xaxis\":\"x\",\"y\":[\"San Fernando Airport\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Airport Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Mae Hong Son Airport\",\"marker\":{\"color\":\"rgb(246, 169, 122)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Mae Hong Son Airport\",\"offsetgroup\":\"Mae Hong Son Airport\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[29],\"xaxis\":\"x\",\"y\":[\"Mae Hong Son Airport\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Airport Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Capital City Airport\",\"marker\":{\"color\":\"rgb(237, 217, 163)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Capital City Airport\",\"offsetgroup\":\"Capital City Airport\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[28],\"xaxis\":\"x\",\"y\":[\"Capital City Airport\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Airport Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Cochrane Airport\",\"marker\":{\"color\":\"rgb(75, 41, 145)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Cochrane Airport\",\"offsetgroup\":\"Cochrane Airport\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[28],\"xaxis\":\"x\",\"y\":[\"Cochrane Airport\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Airport Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Santa Rosa Airport\",\"marker\":{\"color\":\"rgb(135, 44, 162)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Santa Rosa Airport\",\"offsetgroup\":\"Santa Rosa Airport\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[28],\"xaxis\":\"x\",\"y\":[\"Santa Rosa Airport\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Airport Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Bathurst Airport\",\"marker\":{\"color\":\"rgb(192, 54, 157)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Bathurst Airport\",\"offsetgroup\":\"Bathurst Airport\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[27],\"xaxis\":\"x\",\"y\":[\"Bathurst Airport\"],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"rgb(17,17,17)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"bar\":[{\"error_x\":{\"color\":\"#f2f5fa\"},\"error_y\":{\"color\":\"#f2f5fa\"},\"marker\":{\"line\":{\"color\":\"rgb(17,17,17)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#A2B1C6\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"minorgridcolor\":\"#506784\",\"startlinecolor\":\"#A2B1C6\"},\"baxis\":{\"endlinecolor\":\"#A2B1C6\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"minorgridcolor\":\"#506784\",\"startlinecolor\":\"#A2B1C6\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"line\":{\"color\":\"#283442\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatter\":[{\"marker\":{\"line\":{\"color\":\"#283442\"}},\"type\":\"scatter\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#506784\"},\"line\":{\"color\":\"rgb(17,17,17)\"}},\"header\":{\"fill\":{\"color\":\"#2a3f5f\"},\"line\":{\"color\":\"rgb(17,17,17)\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#f2f5fa\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#f2f5fa\"},\"geo\":{\"bgcolor\":\"rgb(17,17,17)\",\"lakecolor\":\"rgb(17,17,17)\",\"landcolor\":\"rgb(17,17,17)\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"#506784\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"dark\"},\"paper_bgcolor\":\"rgb(17,17,17)\",\"plot_bgcolor\":\"rgb(17,17,17)\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"bgcolor\":\"rgb(17,17,17)\",\"radialaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"},\"yaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"},\"zaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"}},\"shapedefaults\":{\"line\":{\"color\":\"#f2f5fa\"}},\"sliderdefaults\":{\"bgcolor\":\"#C8D4E3\",\"bordercolor\":\"rgb(17,17,17)\",\"borderwidth\":1,\"tickwidth\":0},\"ternary\":{\"aaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"bgcolor\":\"rgb(17,17,17)\",\"caxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"updatemenudefaults\":{\"bgcolor\":\"#506784\",\"borderwidth\":0},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"#283442\",\"linecolor\":\"#506784\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#283442\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"#283442\",\"linecolor\":\"#506784\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#283442\",\"zerolinewidth\":2}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"count\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Airport Name\"},\"categoryorder\":\"array\",\"categoryarray\":[\"Bathurst Airport\",\"Santa Rosa Airport\",\"Cochrane Airport\",\"Capital City Airport\",\"Mae Hong Son Airport\",\"San Fernando Airport\",\"Santa Ana Airport\",\"Böblingen Flugfeld\",\"Santa Maria Airport\",\"San Pedro Airport\"]},\"legend\":{\"title\":{\"text\":\"Airport Name\"},\"tracegroupgap\":0},\"margin\":{\"t\":60},\"barmode\":\"relative\"},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('c3ab8e3b-08b5-4ae4-8ced-268e4938820c');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Let's plot top 10 airport\n",
    "\n",
    "px.bar(top10_airport,x='count',y='Airport Name',color='Airport Name',color_discrete_sequence=px.colors.sequential.Agsunset  ,template = 'plotly_dark')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "8241f693",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:38.895403Z",
     "iopub.status.busy": "2024-06-07T11:38:38.894986Z",
     "iopub.status.idle": "2024-06-07T11:38:38.909544Z",
     "shell.execute_reply": "2024-06-07T11:38:38.908333Z"
    },
    "papermill": {
     "duration": 0.040161,
     "end_time": "2024-06-07T11:38:38.912043",
     "exception": false,
     "start_time": "2024-06-07T11:38:38.871882",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Airport Name</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>9060</th>\n",
       "      <td>Falcon State Airport</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9061</th>\n",
       "      <td>Hiroshima Airport</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9051</th>\n",
       "      <td>Camaxilo Airport</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9052</th>\n",
       "      <td>Mount Gambier Airport</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9053</th>\n",
       "      <td>J F Mitchell Airport</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9054</th>\n",
       "      <td>Kar Kar Airport</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9055</th>\n",
       "      <td>Smolensk North Airport</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9056</th>\n",
       "      <td>San Luis Airport</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9057</th>\n",
       "      <td>Balıkesir Merkez Airport</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9058</th>\n",
       "      <td>Arkalyk North Airport</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Airport Name  count\n",
       "9060      Falcon State Airport      1\n",
       "9061         Hiroshima Airport      1\n",
       "9051          Camaxilo Airport      2\n",
       "9052     Mount Gambier Airport      2\n",
       "9053      J F Mitchell Airport      2\n",
       "9054           Kar Kar Airport      2\n",
       "9055    Smolensk North Airport      2\n",
       "9056          San Luis Airport      2\n",
       "9057  Balıkesir Merkez Airport      2\n",
       "9058     Arkalyk North Airport      2"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Getting the top 10 airports with the lowest number of passengers\n",
    "\n",
    "bottom10_airport = airport_name.nsmallest(10, 'count')\n",
    "bottom10_airport"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "ec0fc1c9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:38.957259Z",
     "iopub.status.busy": "2024-06-07T11:38:38.956884Z",
     "iopub.status.idle": "2024-06-07T11:38:39.060859Z",
     "shell.execute_reply": "2024-06-07T11:38:39.059564Z"
    },
    "papermill": {
     "duration": 0.130086,
     "end_time": "2024-06-07T11:38:39.063977",
     "exception": false,
     "start_time": "2024-06-07T11:38:38.933891",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>                            <div id=\"e97cb75f-43b7-45f8-b63a-fc9dadcf35ef\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"e97cb75f-43b7-45f8-b63a-fc9dadcf35ef\")) {                    Plotly.newPlot(                        \"e97cb75f-43b7-45f8-b63a-fc9dadcf35ef\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Airport Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Falcon State Airport\",\"marker\":{\"color\":\"rgb(75, 41, 145)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Falcon State Airport\",\"offsetgroup\":\"Falcon State Airport\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[1],\"xaxis\":\"x\",\"y\":[\"Falcon State Airport\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Airport Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Hiroshima Airport\",\"marker\":{\"color\":\"rgb(135, 44, 162)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Hiroshima Airport\",\"offsetgroup\":\"Hiroshima Airport\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[1],\"xaxis\":\"x\",\"y\":[\"Hiroshima Airport\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Airport Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Camaxilo Airport\",\"marker\":{\"color\":\"rgb(192, 54, 157)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Camaxilo Airport\",\"offsetgroup\":\"Camaxilo Airport\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[2],\"xaxis\":\"x\",\"y\":[\"Camaxilo Airport\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Airport Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Mount Gambier Airport\",\"marker\":{\"color\":\"rgb(234, 79, 136)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Mount Gambier Airport\",\"offsetgroup\":\"Mount Gambier Airport\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[2],\"xaxis\":\"x\",\"y\":[\"Mount Gambier Airport\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Airport Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"J F Mitchell Airport\",\"marker\":{\"color\":\"rgb(250, 120, 118)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"J F Mitchell Airport\",\"offsetgroup\":\"J F Mitchell Airport\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[2],\"xaxis\":\"x\",\"y\":[\"J F Mitchell Airport\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Airport Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Kar Kar Airport\",\"marker\":{\"color\":\"rgb(246, 169, 122)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Kar Kar Airport\",\"offsetgroup\":\"Kar Kar Airport\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[2],\"xaxis\":\"x\",\"y\":[\"Kar Kar Airport\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Airport Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Smolensk North Airport\",\"marker\":{\"color\":\"rgb(237, 217, 163)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Smolensk North Airport\",\"offsetgroup\":\"Smolensk North Airport\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[2],\"xaxis\":\"x\",\"y\":[\"Smolensk North Airport\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Airport Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"San Luis Airport\",\"marker\":{\"color\":\"rgb(75, 41, 145)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"San Luis Airport\",\"offsetgroup\":\"San Luis Airport\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[2],\"xaxis\":\"x\",\"y\":[\"San Luis Airport\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Airport Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Balıkesir Merkez Airport\",\"marker\":{\"color\":\"rgb(135, 44, 162)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Balıkesir Merkez Airport\",\"offsetgroup\":\"Balıkesir Merkez Airport\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[2],\"xaxis\":\"x\",\"y\":[\"Balıkesir Merkez Airport\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Airport Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Arkalyk North Airport\",\"marker\":{\"color\":\"rgb(192, 54, 157)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Arkalyk North Airport\",\"offsetgroup\":\"Arkalyk North Airport\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[2],\"xaxis\":\"x\",\"y\":[\"Arkalyk North Airport\"],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"rgb(17,17,17)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"bar\":[{\"error_x\":{\"color\":\"#f2f5fa\"},\"error_y\":{\"color\":\"#f2f5fa\"},\"marker\":{\"line\":{\"color\":\"rgb(17,17,17)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#A2B1C6\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"minorgridcolor\":\"#506784\",\"startlinecolor\":\"#A2B1C6\"},\"baxis\":{\"endlinecolor\":\"#A2B1C6\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"minorgridcolor\":\"#506784\",\"startlinecolor\":\"#A2B1C6\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"line\":{\"color\":\"#283442\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatter\":[{\"marker\":{\"line\":{\"color\":\"#283442\"}},\"type\":\"scatter\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#506784\"},\"line\":{\"color\":\"rgb(17,17,17)\"}},\"header\":{\"fill\":{\"color\":\"#2a3f5f\"},\"line\":{\"color\":\"rgb(17,17,17)\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#f2f5fa\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#f2f5fa\"},\"geo\":{\"bgcolor\":\"rgb(17,17,17)\",\"lakecolor\":\"rgb(17,17,17)\",\"landcolor\":\"rgb(17,17,17)\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"#506784\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"dark\"},\"paper_bgcolor\":\"rgb(17,17,17)\",\"plot_bgcolor\":\"rgb(17,17,17)\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"bgcolor\":\"rgb(17,17,17)\",\"radialaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"},\"yaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"},\"zaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"}},\"shapedefaults\":{\"line\":{\"color\":\"#f2f5fa\"}},\"sliderdefaults\":{\"bgcolor\":\"#C8D4E3\",\"bordercolor\":\"rgb(17,17,17)\",\"borderwidth\":1,\"tickwidth\":0},\"ternary\":{\"aaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"bgcolor\":\"rgb(17,17,17)\",\"caxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"updatemenudefaults\":{\"bgcolor\":\"#506784\",\"borderwidth\":0},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"#283442\",\"linecolor\":\"#506784\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#283442\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"#283442\",\"linecolor\":\"#506784\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#283442\",\"zerolinewidth\":2}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"count\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Airport Name\"},\"categoryorder\":\"array\",\"categoryarray\":[\"Arkalyk North Airport\",\"Balıkesir Merkez Airport\",\"San Luis Airport\",\"Smolensk North Airport\",\"Kar Kar Airport\",\"J F Mitchell Airport\",\"Mount Gambier Airport\",\"Camaxilo Airport\",\"Hiroshima Airport\",\"Falcon State Airport\"]},\"legend\":{\"title\":{\"text\":\"Airport Name\"},\"tracegroupgap\":0},\"margin\":{\"t\":60},\"barmode\":\"relative\"},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('e97cb75f-43b7-45f8-b63a-fc9dadcf35ef');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Let's plot\n",
    "\n",
    "px.bar(bottom10_airport,x='count',y='Airport Name',color='Airport Name',color_discrete_sequence=px.colors.sequential.Agsunset  ,template = 'plotly_dark')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dbecff13",
   "metadata": {
    "papermill": {
     "duration": 0.022733,
     "end_time": "2024-06-07T11:38:39.110321",
     "exception": false,
     "start_time": "2024-06-07T11:38:39.087588",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Countries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "fe3d5da5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:39.157309Z",
     "iopub.status.busy": "2024-06-07T11:38:39.156940Z",
     "iopub.status.idle": "2024-06-07T11:38:39.171645Z",
     "shell.execute_reply": "2024-06-07T11:38:39.170500Z"
    },
    "papermill": {
     "duration": 0.041346,
     "end_time": "2024-06-07T11:38:39.173932",
     "exception": false,
     "start_time": "2024-06-07T11:38:39.132586",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['United States', 'Canada', 'France', 'Brazil', 'United Kingdom',\n",
       "       'Italy', 'Mexico', 'Panama', 'Pakistan', 'Australia',\n",
       "       'South Africa', 'Venezuela, Bolivarian Republic of', 'China',\n",
       "       'Madagascar', 'Colombia', 'Mauritania', 'Myanmar', 'Congo',\n",
       "       'Zambia', 'Samoa', 'New Caledonia', 'Equatorial Guinea',\n",
       "       'Papua New Guinea', 'Bahamas', 'Indonesia', 'Russian Federation',\n",
       "       'Bolivia, Plurinational State of', 'Kenya', 'Burkina Faso',\n",
       "       'Guatemala', 'Taiwan, Province of China', 'India', 'Norway',\n",
       "       'Costa Rica', 'Portugal', 'Sri Lanka', 'French Polynesia',\n",
       "       'Mozambique', 'Algeria', 'Nepal', 'Bulgaria',\n",
       "       'Iran, Islamic Republic of', 'Honduras', 'Sudan', 'Japan',\n",
       "       'Dominican Republic', 'Iceland', 'Viet Nam',\n",
       "       'Syrian Arab Republic', 'Romania', 'Cayman Islands', 'Germany',\n",
       "       'Slovakia', 'Botswana', 'Saudi Arabia', 'Ecuador', 'Cameroon',\n",
       "       'Mongolia', 'Dominica', 'Paraguay', 'Israel', 'Croatia',\n",
       "       'Argentina', 'Vanuatu', 'New Zealand',\n",
       "       'Congo, The Democratic Republic of the', 'Ukraine', 'Sweden',\n",
       "       'Nicaragua', 'Malaysia', 'Ethiopia', 'Poland', 'Cuba', 'Spain',\n",
       "       'Cambodia', 'Oman', 'Peru', 'Guyana', 'Uruguay', 'Morocco',\n",
       "       'Estonia', 'Kuwait', 'Greece', 'Senegal', 'Gabon', 'Somalia',\n",
       "       \"Côte d'Ivoire\", 'Falkland Islands (Malvinas)', 'Solomon Islands',\n",
       "       'Zimbabwe', 'Grenada', 'Chile', 'Virgin Islands, U.S.',\n",
       "       'Marshall Islands', 'Jamaica', 'Philippines', 'Suriname',\n",
       "       'Puerto Rico', 'Wallis and Futuna', 'Tunisia', 'Turkey', 'Hungary',\n",
       "       'Tanzania, United Republic of', 'Slovenia', 'Tonga', 'Angola',\n",
       "       'Afghanistan', 'Lesotho', 'Egypt', 'Libya', 'Malawi', 'Cabo Verde',\n",
       "       'Netherlands', 'Macao', 'Liberia', 'Kiribati', 'Thailand',\n",
       "       \"Lao People's Democratic Republic\", 'Northern Mariana Islands',\n",
       "       'Switzerland', 'Austria', 'Togo', 'Azerbaijan', 'Norfolk Island',\n",
       "       'Yemen', 'Jordan', 'Nigeria', 'Belize', 'Uganda', 'Rwanda',\n",
       "       'Maldives', 'Korea, Republic of', 'Faroe Islands', 'Lithuania',\n",
       "       'Micronesia, Federated States of', 'Finland',\n",
       "       'United States Minor Outlying Islands', 'Eritrea', 'Timor-Leste',\n",
       "       'Fiji', 'Western Sahara', 'Denmark', 'Bangladesh', 'Belarus',\n",
       "       'Turkmenistan', 'Saint Martin (French part)',\n",
       "       'Palestine, State of', 'Cyprus', 'Tuvalu', 'Czechia',\n",
       "       'Central African Republic', 'Nauru', 'Antigua and Barbuda',\n",
       "       'South Sudan', 'Greenland', 'Djibouti', 'Belgium', 'Iraq',\n",
       "       'Sierra Leone', 'Saint Lucia', 'Malta', 'Chad', 'North Macedonia',\n",
       "       'Moldova, Republic of', 'Bosnia and Herzegovina', 'Uzbekistan',\n",
       "       'Burundi', 'Qatar', 'United Arab Emirates', 'Réunion',\n",
       "       'Kazakhstan', 'Saint Helena, Ascension and Tristan da Cunha',\n",
       "       'Ireland', 'Turks and Caicos Islands', 'Saint Kitts and Nevis',\n",
       "       'Sao Tome and Principe', 'Cook Islands', 'Guinea', 'Eswatini',\n",
       "       'Guadeloupe', 'Kyrgyzstan', 'Bermuda', 'French Guiana',\n",
       "       'American Samoa', 'Hong Kong', 'Virgin Islands, British', 'Benin',\n",
       "       'Haiti', 'Guinea-Bissau', 'Armenia', 'El Salvador', 'Guam', 'Mali',\n",
       "       'Singapore', 'Cocos (Keeling) Islands', 'Gambia', 'Montenegro',\n",
       "       'Niger', 'Bonaire, Sint Eustatius and Saba', 'Luxembourg',\n",
       "       'Saint Vincent and the Grenadines', 'Comoros', 'Saint Barthélemy',\n",
       "       'Tajikistan', 'Seychelles', 'Ghana', 'Mauritius', 'Niue', 'Bhutan',\n",
       "       'Latvia', 'Trinidad and Tobago', 'Anguilla', 'Isle of Man',\n",
       "       'Lebanon', 'Serbia', 'Guernsey', 'Georgia', 'Christmas Island',\n",
       "       'Saint Pierre and Miquelon', 'Mayotte', 'Brunei Darussalam',\n",
       "       'Jersey', \"Korea, Democratic People's Republic of\", 'Gibraltar',\n",
       "       'Andorra', 'Bahrain', 'Barbados', 'Sint Maarten (Dutch part)',\n",
       "       'British Indian Ocean Territory', 'Martinique', 'Albania',\n",
       "       'Montserrat', 'Monaco', 'Aruba', 'Palau'], dtype=object)"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Country Name'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "d5833bd3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:39.220896Z",
     "iopub.status.busy": "2024-06-07T11:38:39.220483Z",
     "iopub.status.idle": "2024-06-07T11:38:39.234451Z",
     "shell.execute_reply": "2024-06-07T11:38:39.233251Z"
    },
    "papermill": {
     "duration": 0.040705,
     "end_time": "2024-06-07T11:38:39.236917",
     "exception": false,
     "start_time": "2024-06-07T11:38:39.196212",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "235"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Country Name'].nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "d09666ae",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:39.285269Z",
     "iopub.status.busy": "2024-06-07T11:38:39.284780Z",
     "iopub.status.idle": "2024-06-07T11:38:39.310185Z",
     "shell.execute_reply": "2024-06-07T11:38:39.308870Z"
    },
    "papermill": {
     "duration": 0.057285,
     "end_time": "2024-06-07T11:38:39.316508",
     "exception": false,
     "start_time": "2024-06-07T11:38:39.259223",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country Name</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>United States</td>\n",
       "      <td>22104</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Australia</td>\n",
       "      <td>6370</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Canada</td>\n",
       "      <td>5424</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Brazil</td>\n",
       "      <td>4504</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Papua New Guinea</td>\n",
       "      <td>4081</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>230</th>\n",
       "      <td>Andorra</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>231</th>\n",
       "      <td>Monaco</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>232</th>\n",
       "      <td>Nauru</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>233</th>\n",
       "      <td>Palau</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>234</th>\n",
       "      <td>Jersey</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>235 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Country Name  count\n",
       "0       United States  22104\n",
       "1           Australia   6370\n",
       "2              Canada   5424\n",
       "3              Brazil   4504\n",
       "4    Papua New Guinea   4081\n",
       "..                ...    ...\n",
       "230           Andorra      7\n",
       "231            Monaco      7\n",
       "232             Nauru      7\n",
       "233             Palau      5\n",
       "234            Jersey      4\n",
       "\n",
       "[235 rows x 2 columns]"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "country=df['Country Name'].value_counts().reset_index()\n",
    "country"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "b6f63522",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:39.388654Z",
     "iopub.status.busy": "2024-06-07T11:38:39.388124Z",
     "iopub.status.idle": "2024-06-07T11:38:39.403664Z",
     "shell.execute_reply": "2024-06-07T11:38:39.402363Z"
    },
    "papermill": {
     "duration": 0.053447,
     "end_time": "2024-06-07T11:38:39.406550",
     "exception": false,
     "start_time": "2024-06-07T11:38:39.353103",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country Name</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>United States</td>\n",
       "      <td>22104</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Australia</td>\n",
       "      <td>6370</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Canada</td>\n",
       "      <td>5424</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Brazil</td>\n",
       "      <td>4504</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Papua New Guinea</td>\n",
       "      <td>4081</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>China</td>\n",
       "      <td>2779</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Indonesia</td>\n",
       "      <td>2358</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Russian Federation</td>\n",
       "      <td>2247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Colombia</td>\n",
       "      <td>1643</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>India</td>\n",
       "      <td>1486</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Country Name  count\n",
       "0       United States  22104\n",
       "1           Australia   6370\n",
       "2              Canada   5424\n",
       "3              Brazil   4504\n",
       "4    Papua New Guinea   4081\n",
       "5               China   2779\n",
       "6           Indonesia   2358\n",
       "7  Russian Federation   2247\n",
       "8            Colombia   1643\n",
       "9               India   1486"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Top 10 countries \n",
    "\n",
    "top10_country=country.nlargest(10,'count')\n",
    "top10_country"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "83171e92",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:39.456471Z",
     "iopub.status.busy": "2024-06-07T11:38:39.455602Z",
     "iopub.status.idle": "2024-06-07T11:38:39.568089Z",
     "shell.execute_reply": "2024-06-07T11:38:39.566677Z"
    },
    "papermill": {
     "duration": 0.140549,
     "end_time": "2024-06-07T11:38:39.571000",
     "exception": false,
     "start_time": "2024-06-07T11:38:39.430451",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>                            <div id=\"40d3d440-40e6-48fe-add7-786e061580e9\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"40d3d440-40e6-48fe-add7-786e061580e9\")) {                    Plotly.newPlot(                        \"40d3d440-40e6-48fe-add7-786e061580e9\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Country Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"United States\",\"marker\":{\"color\":\"rgb(75, 41, 145)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"United States\",\"offsetgroup\":\"United States\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[22104],\"xaxis\":\"x\",\"y\":[\"United States\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Country Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Australia\",\"marker\":{\"color\":\"rgb(135, 44, 162)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Australia\",\"offsetgroup\":\"Australia\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[6370],\"xaxis\":\"x\",\"y\":[\"Australia\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Country Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Canada\",\"marker\":{\"color\":\"rgb(192, 54, 157)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Canada\",\"offsetgroup\":\"Canada\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[5424],\"xaxis\":\"x\",\"y\":[\"Canada\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Country Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Brazil\",\"marker\":{\"color\":\"rgb(234, 79, 136)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Brazil\",\"offsetgroup\":\"Brazil\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[4504],\"xaxis\":\"x\",\"y\":[\"Brazil\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Country Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Papua New Guinea\",\"marker\":{\"color\":\"rgb(250, 120, 118)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Papua New Guinea\",\"offsetgroup\":\"Papua New Guinea\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[4081],\"xaxis\":\"x\",\"y\":[\"Papua New Guinea\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Country Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"China\",\"marker\":{\"color\":\"rgb(246, 169, 122)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"China\",\"offsetgroup\":\"China\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[2779],\"xaxis\":\"x\",\"y\":[\"China\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Country Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Indonesia\",\"marker\":{\"color\":\"rgb(237, 217, 163)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Indonesia\",\"offsetgroup\":\"Indonesia\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[2358],\"xaxis\":\"x\",\"y\":[\"Indonesia\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Country Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Russian Federation\",\"marker\":{\"color\":\"rgb(75, 41, 145)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Russian Federation\",\"offsetgroup\":\"Russian Federation\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[2247],\"xaxis\":\"x\",\"y\":[\"Russian Federation\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Country Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Colombia\",\"marker\":{\"color\":\"rgb(135, 44, 162)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Colombia\",\"offsetgroup\":\"Colombia\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[1643],\"xaxis\":\"x\",\"y\":[\"Colombia\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Country Name=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"India\",\"marker\":{\"color\":\"rgb(192, 54, 157)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"India\",\"offsetgroup\":\"India\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[1486],\"xaxis\":\"x\",\"y\":[\"India\"],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"rgb(17,17,17)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"bar\":[{\"error_x\":{\"color\":\"#f2f5fa\"},\"error_y\":{\"color\":\"#f2f5fa\"},\"marker\":{\"line\":{\"color\":\"rgb(17,17,17)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#A2B1C6\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"minorgridcolor\":\"#506784\",\"startlinecolor\":\"#A2B1C6\"},\"baxis\":{\"endlinecolor\":\"#A2B1C6\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"minorgridcolor\":\"#506784\",\"startlinecolor\":\"#A2B1C6\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"line\":{\"color\":\"#283442\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatter\":[{\"marker\":{\"line\":{\"color\":\"#283442\"}},\"type\":\"scatter\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#506784\"},\"line\":{\"color\":\"rgb(17,17,17)\"}},\"header\":{\"fill\":{\"color\":\"#2a3f5f\"},\"line\":{\"color\":\"rgb(17,17,17)\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#f2f5fa\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#f2f5fa\"},\"geo\":{\"bgcolor\":\"rgb(17,17,17)\",\"lakecolor\":\"rgb(17,17,17)\",\"landcolor\":\"rgb(17,17,17)\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"#506784\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"dark\"},\"paper_bgcolor\":\"rgb(17,17,17)\",\"plot_bgcolor\":\"rgb(17,17,17)\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"bgcolor\":\"rgb(17,17,17)\",\"radialaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"},\"yaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"},\"zaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"}},\"shapedefaults\":{\"line\":{\"color\":\"#f2f5fa\"}},\"sliderdefaults\":{\"bgcolor\":\"#C8D4E3\",\"bordercolor\":\"rgb(17,17,17)\",\"borderwidth\":1,\"tickwidth\":0},\"ternary\":{\"aaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"bgcolor\":\"rgb(17,17,17)\",\"caxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"updatemenudefaults\":{\"bgcolor\":\"#506784\",\"borderwidth\":0},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"#283442\",\"linecolor\":\"#506784\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#283442\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"#283442\",\"linecolor\":\"#506784\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#283442\",\"zerolinewidth\":2}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"count\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Country Name\"},\"categoryorder\":\"array\",\"categoryarray\":[\"India\",\"Colombia\",\"Russian Federation\",\"Indonesia\",\"China\",\"Papua New Guinea\",\"Brazil\",\"Canada\",\"Australia\",\"United States\"]},\"legend\":{\"title\":{\"text\":\"Country Name\"},\"tracegroupgap\":0},\"margin\":{\"t\":60},\"barmode\":\"relative\"},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('40d3d440-40e6-48fe-add7-786e061580e9');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Let's plot this\n",
    "\n",
    "px.bar(top10_country,x='count',y='Country Name',color='Country Name',color_discrete_sequence=px.colors.sequential.Agsunset  ,template = 'plotly_dark')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "124563cb",
   "metadata": {
    "papermill": {
     "duration": 0.023267,
     "end_time": "2024-06-07T11:38:39.618132",
     "exception": false,
     "start_time": "2024-06-07T11:38:39.594865",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Continents"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "dc6b01e6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:39.671568Z",
     "iopub.status.busy": "2024-06-07T11:38:39.670781Z",
     "iopub.status.idle": "2024-06-07T11:38:39.691222Z",
     "shell.execute_reply": "2024-06-07T11:38:39.689854Z"
    },
    "papermill": {
     "duration": 0.052437,
     "end_time": "2024-06-07T11:38:39.694160",
     "exception": false,
     "start_time": "2024-06-07T11:38:39.641723",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Continents</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>North America</td>\n",
       "      <td>32033</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Asia</td>\n",
       "      <td>18637</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Oceania</td>\n",
       "      <td>13866</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Europe</td>\n",
       "      <td>12335</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Africa</td>\n",
       "      <td>11030</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>South America</td>\n",
       "      <td>10718</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Continents  count\n",
       "0  North America  32033\n",
       "1           Asia  18637\n",
       "2        Oceania  13866\n",
       "3         Europe  12335\n",
       "4         Africa  11030\n",
       "5  South America  10718"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "continent=df['Continents'].value_counts().reset_index()\n",
    "continent"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "d88022f3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:39.746912Z",
     "iopub.status.busy": "2024-06-07T11:38:39.746455Z",
     "iopub.status.idle": "2024-06-07T11:38:39.837442Z",
     "shell.execute_reply": "2024-06-07T11:38:39.836191Z"
    },
    "papermill": {
     "duration": 0.121828,
     "end_time": "2024-06-07T11:38:39.840222",
     "exception": false,
     "start_time": "2024-06-07T11:38:39.718394",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>                            <div id=\"12ba732e-028a-44b7-8b60-5c88f66bfbe9\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"12ba732e-028a-44b7-8b60-5c88f66bfbe9\")) {                    Plotly.newPlot(                        \"12ba732e-028a-44b7-8b60-5c88f66bfbe9\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Continents=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"North America\",\"marker\":{\"color\":\"rgb(75, 41, 145)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"North America\",\"offsetgroup\":\"North America\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[32033],\"xaxis\":\"x\",\"y\":[\"North America\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Continents=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Asia\",\"marker\":{\"color\":\"rgb(135, 44, 162)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Asia\",\"offsetgroup\":\"Asia\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[18637],\"xaxis\":\"x\",\"y\":[\"Asia\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Continents=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Oceania\",\"marker\":{\"color\":\"rgb(192, 54, 157)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Oceania\",\"offsetgroup\":\"Oceania\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[13866],\"xaxis\":\"x\",\"y\":[\"Oceania\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Continents=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Europe\",\"marker\":{\"color\":\"rgb(234, 79, 136)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Europe\",\"offsetgroup\":\"Europe\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[12335],\"xaxis\":\"x\",\"y\":[\"Europe\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Continents=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Africa\",\"marker\":{\"color\":\"rgb(250, 120, 118)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Africa\",\"offsetgroup\":\"Africa\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[11030],\"xaxis\":\"x\",\"y\":[\"Africa\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Continents=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"South America\",\"marker\":{\"color\":\"rgb(246, 169, 122)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"South America\",\"offsetgroup\":\"South America\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[10718],\"xaxis\":\"x\",\"y\":[\"South America\"],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"rgb(17,17,17)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"bar\":[{\"error_x\":{\"color\":\"#f2f5fa\"},\"error_y\":{\"color\":\"#f2f5fa\"},\"marker\":{\"line\":{\"color\":\"rgb(17,17,17)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#A2B1C6\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"minorgridcolor\":\"#506784\",\"startlinecolor\":\"#A2B1C6\"},\"baxis\":{\"endlinecolor\":\"#A2B1C6\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"minorgridcolor\":\"#506784\",\"startlinecolor\":\"#A2B1C6\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"line\":{\"color\":\"#283442\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatter\":[{\"marker\":{\"line\":{\"color\":\"#283442\"}},\"type\":\"scatter\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#506784\"},\"line\":{\"color\":\"rgb(17,17,17)\"}},\"header\":{\"fill\":{\"color\":\"#2a3f5f\"},\"line\":{\"color\":\"rgb(17,17,17)\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#f2f5fa\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#f2f5fa\"},\"geo\":{\"bgcolor\":\"rgb(17,17,17)\",\"lakecolor\":\"rgb(17,17,17)\",\"landcolor\":\"rgb(17,17,17)\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"#506784\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"dark\"},\"paper_bgcolor\":\"rgb(17,17,17)\",\"plot_bgcolor\":\"rgb(17,17,17)\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"bgcolor\":\"rgb(17,17,17)\",\"radialaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"},\"yaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"},\"zaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"}},\"shapedefaults\":{\"line\":{\"color\":\"#f2f5fa\"}},\"sliderdefaults\":{\"bgcolor\":\"#C8D4E3\",\"bordercolor\":\"rgb(17,17,17)\",\"borderwidth\":1,\"tickwidth\":0},\"ternary\":{\"aaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"bgcolor\":\"rgb(17,17,17)\",\"caxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"updatemenudefaults\":{\"bgcolor\":\"#506784\",\"borderwidth\":0},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"#283442\",\"linecolor\":\"#506784\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#283442\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"#283442\",\"linecolor\":\"#506784\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#283442\",\"zerolinewidth\":2}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"count\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Continents\"},\"categoryorder\":\"array\",\"categoryarray\":[\"South America\",\"Africa\",\"Europe\",\"Oceania\",\"Asia\",\"North America\"]},\"legend\":{\"title\":{\"text\":\"Continents\"},\"tracegroupgap\":0},\"margin\":{\"t\":60},\"barmode\":\"relative\"},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('12ba732e-028a-44b7-8b60-5c88f66bfbe9');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plotting the continents passenger count\n",
    "px.bar(continent,x='count',y='Continents',color='Continents',color_discrete_sequence=px.colors.sequential.Agsunset  ,template = 'plotly_dark')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "02a2bcdf",
   "metadata": {
    "papermill": {
     "duration": 0.024048,
     "end_time": "2024-06-07T11:38:39.890682",
     "exception": false,
     "start_time": "2024-06-07T11:38:39.866634",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Let's look at the dataset again"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "64ca16cb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:39.941236Z",
     "iopub.status.busy": "2024-06-07T11:38:39.940718Z",
     "iopub.status.idle": "2024-06-07T11:38:39.961814Z",
     "shell.execute_reply": "2024-06-07T11:38:39.960452Z"
    },
    "papermill": {
     "duration": 0.049841,
     "end_time": "2024-06-07T11:38:39.964707",
     "exception": false,
     "start_time": "2024-06-07T11:38:39.914866",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Nationality</th>\n",
       "      <th>Airport Name</th>\n",
       "      <th>Airport Country Code</th>\n",
       "      <th>Country Name</th>\n",
       "      <th>Airport Continent</th>\n",
       "      <th>Continents</th>\n",
       "      <th>Departure Date</th>\n",
       "      <th>Arrival Airport</th>\n",
       "      <th>Pilot Name</th>\n",
       "      <th>Flight Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Female</td>\n",
       "      <td>62</td>\n",
       "      <td>Japan</td>\n",
       "      <td>Coldfoot Airport</td>\n",
       "      <td>US</td>\n",
       "      <td>United States</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>6/28/2022</td>\n",
       "      <td>CXF</td>\n",
       "      <td>Fransisco Hazeldine</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Male</td>\n",
       "      <td>62</td>\n",
       "      <td>Nicaragua</td>\n",
       "      <td>Kugluktuk Airport</td>\n",
       "      <td>CA</td>\n",
       "      <td>Canada</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>12/26/2022</td>\n",
       "      <td>YCO</td>\n",
       "      <td>Marla Parsonage</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Male</td>\n",
       "      <td>67</td>\n",
       "      <td>Russia</td>\n",
       "      <td>Grenoble-Isère Airport</td>\n",
       "      <td>FR</td>\n",
       "      <td>France</td>\n",
       "      <td>EU</td>\n",
       "      <td>Europe</td>\n",
       "      <td>1/18/2022</td>\n",
       "      <td>GNB</td>\n",
       "      <td>Rhonda Amber</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Female</td>\n",
       "      <td>71</td>\n",
       "      <td>China</td>\n",
       "      <td>Ottawa / Gatineau Airport</td>\n",
       "      <td>CA</td>\n",
       "      <td>Canada</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>9/16/2022</td>\n",
       "      <td>YND</td>\n",
       "      <td>Kacie Commucci</td>\n",
       "      <td>Delayed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>China</td>\n",
       "      <td>Gillespie Field</td>\n",
       "      <td>US</td>\n",
       "      <td>United States</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>2/25/2022</td>\n",
       "      <td>SEE</td>\n",
       "      <td>Ebonee Tree</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Female</td>\n",
       "      <td>55</td>\n",
       "      <td>Brazil</td>\n",
       "      <td>Coronel Horácio de Mattos Airport</td>\n",
       "      <td>BR</td>\n",
       "      <td>Brazil</td>\n",
       "      <td>SAM</td>\n",
       "      <td>South America</td>\n",
       "      <td>06-10-2022</td>\n",
       "      <td>LEC</td>\n",
       "      <td>Inglis Dolley</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Male</td>\n",
       "      <td>73</td>\n",
       "      <td>Ivory Coast</td>\n",
       "      <td>Duxford Aerodrome</td>\n",
       "      <td>GB</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>EU</td>\n",
       "      <td>Europe</td>\n",
       "      <td>10/30/2022</td>\n",
       "      <td>QFO</td>\n",
       "      <td>Stanislas Tiffin</td>\n",
       "      <td>Cancelled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Male</td>\n",
       "      <td>36</td>\n",
       "      <td>Vietnam</td>\n",
       "      <td>Maestro Wilson Fonseca Airport</td>\n",
       "      <td>BR</td>\n",
       "      <td>Brazil</td>\n",
       "      <td>SAM</td>\n",
       "      <td>South America</td>\n",
       "      <td>04-07-2022</td>\n",
       "      <td>STM</td>\n",
       "      <td>Sharyl Eastmead</td>\n",
       "      <td>Cancelled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Female</td>\n",
       "      <td>35</td>\n",
       "      <td>Palestinian Territory</td>\n",
       "      <td>Venice Marco Polo Airport</td>\n",
       "      <td>IT</td>\n",
       "      <td>Italy</td>\n",
       "      <td>EU</td>\n",
       "      <td>Europe</td>\n",
       "      <td>8/20/2022</td>\n",
       "      <td>VCE</td>\n",
       "      <td>Daryn Bardsley</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Male</td>\n",
       "      <td>13</td>\n",
       "      <td>Thailand</td>\n",
       "      <td>Vermilion Airport</td>\n",
       "      <td>CA</td>\n",
       "      <td>Canada</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>04-06-2022</td>\n",
       "      <td>YVG</td>\n",
       "      <td>Alameda Carlyle</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Gender  Age            Nationality                       Airport Name  \\\n",
       "0  Female   62                  Japan                   Coldfoot Airport   \n",
       "1    Male   62              Nicaragua                  Kugluktuk Airport   \n",
       "2    Male   67                 Russia             Grenoble-Isère Airport   \n",
       "3  Female   71                  China          Ottawa / Gatineau Airport   \n",
       "4    Male   21                  China                    Gillespie Field   \n",
       "5  Female   55                 Brazil  Coronel Horácio de Mattos Airport   \n",
       "6    Male   73            Ivory Coast                  Duxford Aerodrome   \n",
       "7    Male   36                Vietnam     Maestro Wilson Fonseca Airport   \n",
       "8  Female   35  Palestinian Territory          Venice Marco Polo Airport   \n",
       "9    Male   13               Thailand                  Vermilion Airport   \n",
       "\n",
       "  Airport Country Code    Country Name Airport Continent     Continents  \\\n",
       "0                   US   United States               NAM  North America   \n",
       "1                   CA          Canada               NAM  North America   \n",
       "2                   FR          France                EU         Europe   \n",
       "3                   CA          Canada               NAM  North America   \n",
       "4                   US   United States               NAM  North America   \n",
       "5                   BR          Brazil               SAM  South America   \n",
       "6                   GB  United Kingdom                EU         Europe   \n",
       "7                   BR          Brazil               SAM  South America   \n",
       "8                   IT           Italy                EU         Europe   \n",
       "9                   CA          Canada               NAM  North America   \n",
       "\n",
       "  Departure Date Arrival Airport           Pilot Name Flight Status  \n",
       "0      6/28/2022             CXF  Fransisco Hazeldine       On Time  \n",
       "1     12/26/2022             YCO      Marla Parsonage       On Time  \n",
       "2      1/18/2022             GNB         Rhonda Amber       On Time  \n",
       "3      9/16/2022             YND       Kacie Commucci       Delayed  \n",
       "4      2/25/2022             SEE          Ebonee Tree       On Time  \n",
       "5     06-10-2022             LEC        Inglis Dolley       On Time  \n",
       "6     10/30/2022             QFO     Stanislas Tiffin     Cancelled  \n",
       "7     04-07-2022             STM      Sharyl Eastmead     Cancelled  \n",
       "8      8/20/2022             VCE       Daryn Bardsley       On Time  \n",
       "9     04-06-2022             YVG      Alameda Carlyle       On Time  "
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6c9edcd4",
   "metadata": {
    "papermill": {
     "duration": 0.024062,
     "end_time": "2024-06-07T11:38:40.012867",
     "exception": false,
     "start_time": "2024-06-07T11:38:39.988805",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "We can drop the Country Code and Pilot Name too:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "34886802",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:40.063997Z",
     "iopub.status.busy": "2024-06-07T11:38:40.063462Z",
     "iopub.status.idle": "2024-06-07T11:38:40.083339Z",
     "shell.execute_reply": "2024-06-07T11:38:40.082153Z"
    },
    "papermill": {
     "duration": 0.048967,
     "end_time": "2024-06-07T11:38:40.086096",
     "exception": false,
     "start_time": "2024-06-07T11:38:40.037129",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = df.drop(['Pilot Name', 'Airport Country Code'], axis = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "ff6b9d10",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:40.137259Z",
     "iopub.status.busy": "2024-06-07T11:38:40.136727Z",
     "iopub.status.idle": "2024-06-07T11:38:40.155507Z",
     "shell.execute_reply": "2024-06-07T11:38:40.154249Z"
    },
    "papermill": {
     "duration": 0.047833,
     "end_time": "2024-06-07T11:38:40.158070",
     "exception": false,
     "start_time": "2024-06-07T11:38:40.110237",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Nationality</th>\n",
       "      <th>Airport Name</th>\n",
       "      <th>Country Name</th>\n",
       "      <th>Airport Continent</th>\n",
       "      <th>Continents</th>\n",
       "      <th>Departure Date</th>\n",
       "      <th>Arrival Airport</th>\n",
       "      <th>Flight Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Female</td>\n",
       "      <td>62</td>\n",
       "      <td>Japan</td>\n",
       "      <td>Coldfoot Airport</td>\n",
       "      <td>United States</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>6/28/2022</td>\n",
       "      <td>CXF</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Male</td>\n",
       "      <td>62</td>\n",
       "      <td>Nicaragua</td>\n",
       "      <td>Kugluktuk Airport</td>\n",
       "      <td>Canada</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>12/26/2022</td>\n",
       "      <td>YCO</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Male</td>\n",
       "      <td>67</td>\n",
       "      <td>Russia</td>\n",
       "      <td>Grenoble-Isère Airport</td>\n",
       "      <td>France</td>\n",
       "      <td>EU</td>\n",
       "      <td>Europe</td>\n",
       "      <td>1/18/2022</td>\n",
       "      <td>GNB</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Female</td>\n",
       "      <td>71</td>\n",
       "      <td>China</td>\n",
       "      <td>Ottawa / Gatineau Airport</td>\n",
       "      <td>Canada</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>9/16/2022</td>\n",
       "      <td>YND</td>\n",
       "      <td>Delayed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>China</td>\n",
       "      <td>Gillespie Field</td>\n",
       "      <td>United States</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>2/25/2022</td>\n",
       "      <td>SEE</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Gender  Age Nationality               Airport Name   Country Name  \\\n",
       "0  Female   62       Japan           Coldfoot Airport  United States   \n",
       "1    Male   62   Nicaragua          Kugluktuk Airport         Canada   \n",
       "2    Male   67      Russia     Grenoble-Isère Airport         France   \n",
       "3  Female   71       China  Ottawa / Gatineau Airport         Canada   \n",
       "4    Male   21       China            Gillespie Field  United States   \n",
       "\n",
       "  Airport Continent     Continents Departure Date Arrival Airport  \\\n",
       "0               NAM  North America      6/28/2022             CXF   \n",
       "1               NAM  North America     12/26/2022             YCO   \n",
       "2                EU         Europe      1/18/2022             GNB   \n",
       "3               NAM  North America      9/16/2022             YND   \n",
       "4               NAM  North America      2/25/2022             SEE   \n",
       "\n",
       "  Flight Status  \n",
       "0       On Time  \n",
       "1       On Time  \n",
       "2       On Time  \n",
       "3       Delayed  \n",
       "4       On Time  "
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d58f56a2",
   "metadata": {
    "papermill": {
     "duration": 0.024377,
     "end_time": "2024-06-07T11:38:40.208484",
     "exception": false,
     "start_time": "2024-06-07T11:38:40.184107",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Airport Name (Arrival Airports)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "2e0f8414",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:40.259926Z",
     "iopub.status.busy": "2024-06-07T11:38:40.259410Z",
     "iopub.status.idle": "2024-06-07T11:38:40.293346Z",
     "shell.execute_reply": "2024-06-07T11:38:40.292082Z"
    },
    "papermill": {
     "duration": 0.062634,
     "end_time": "2024-06-07T11:38:40.296034",
     "exception": false,
     "start_time": "2024-06-07T11:38:40.233400",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Arrival Airport</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>873</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>JNB</td>\n",
       "      <td>37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>PHM</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>MPT</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>PCO</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9019</th>\n",
       "      <td>CXM</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9020</th>\n",
       "      <td>IPI</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9021</th>\n",
       "      <td>BQU</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9022</th>\n",
       "      <td>FAL</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9023</th>\n",
       "      <td>HIJ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>9024 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Arrival Airport  count\n",
       "0                  0    873\n",
       "1                JNB     37\n",
       "2                PHM     36\n",
       "3                MPT     32\n",
       "4                PCO     27\n",
       "...              ...    ...\n",
       "9019             CXM      2\n",
       "9020             IPI      2\n",
       "9021             BQU      2\n",
       "9022             FAL      1\n",
       "9023             HIJ      1\n",
       "\n",
       "[9024 rows x 2 columns]"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "airport=df['Arrival Airport'].value_counts().reset_index()\n",
    "airport"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "6b322798",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:40.351906Z",
     "iopub.status.busy": "2024-06-07T11:38:40.350860Z",
     "iopub.status.idle": "2024-06-07T11:38:40.366543Z",
     "shell.execute_reply": "2024-06-07T11:38:40.365087Z"
    },
    "papermill": {
     "duration": 0.047899,
     "end_time": "2024-06-07T11:38:40.370267",
     "exception": false,
     "start_time": "2024-06-07T11:38:40.322368",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Arrival Airport</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>873</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>JNB</td>\n",
       "      <td>37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>PHM</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>MPT</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>PCO</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>YTY</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>ZRZ</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>DZI</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>AHT</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>GTF</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Arrival Airport  count\n",
       "0               0    873\n",
       "1             JNB     37\n",
       "2             PHM     36\n",
       "3             MPT     32\n",
       "4             PCO     27\n",
       "5             YTY     27\n",
       "6             ZRZ     26\n",
       "7             DZI     25\n",
       "8             AHT     25\n",
       "9             GTF     25"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Top 10 arrival airports\n",
    "top=airport.nlargest(10,'count')\n",
    "top"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "3dcd231d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:40.423881Z",
     "iopub.status.busy": "2024-06-07T11:38:40.423464Z",
     "iopub.status.idle": "2024-06-07T11:38:40.530834Z",
     "shell.execute_reply": "2024-06-07T11:38:40.529547Z"
    },
    "papermill": {
     "duration": 0.135779,
     "end_time": "2024-06-07T11:38:40.533376",
     "exception": false,
     "start_time": "2024-06-07T11:38:40.397597",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>                            <div id=\"457b1fa8-65fb-460e-86a6-3acebdac9450\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"457b1fa8-65fb-460e-86a6-3acebdac9450\")) {                    Plotly.newPlot(                        \"457b1fa8-65fb-460e-86a6-3acebdac9450\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Arrival Airport=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"0\",\"marker\":{\"color\":\"rgb(75, 41, 145)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"0\",\"offsetgroup\":\"0\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[873],\"xaxis\":\"x\",\"y\":[\"0\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Arrival Airport=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"JNB\",\"marker\":{\"color\":\"rgb(135, 44, 162)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"JNB\",\"offsetgroup\":\"JNB\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[37],\"xaxis\":\"x\",\"y\":[\"JNB\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Arrival Airport=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"PHM\",\"marker\":{\"color\":\"rgb(192, 54, 157)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"PHM\",\"offsetgroup\":\"PHM\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[36],\"xaxis\":\"x\",\"y\":[\"PHM\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Arrival Airport=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"MPT\",\"marker\":{\"color\":\"rgb(234, 79, 136)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"MPT\",\"offsetgroup\":\"MPT\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[32],\"xaxis\":\"x\",\"y\":[\"MPT\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Arrival Airport=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"PCO\",\"marker\":{\"color\":\"rgb(250, 120, 118)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"PCO\",\"offsetgroup\":\"PCO\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[27],\"xaxis\":\"x\",\"y\":[\"PCO\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Arrival Airport=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"YTY\",\"marker\":{\"color\":\"rgb(246, 169, 122)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"YTY\",\"offsetgroup\":\"YTY\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[27],\"xaxis\":\"x\",\"y\":[\"YTY\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Arrival Airport=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"ZRZ\",\"marker\":{\"color\":\"rgb(237, 217, 163)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"ZRZ\",\"offsetgroup\":\"ZRZ\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[26],\"xaxis\":\"x\",\"y\":[\"ZRZ\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Arrival Airport=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"DZI\",\"marker\":{\"color\":\"rgb(75, 41, 145)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"DZI\",\"offsetgroup\":\"DZI\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[25],\"xaxis\":\"x\",\"y\":[\"DZI\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Arrival Airport=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"AHT\",\"marker\":{\"color\":\"rgb(135, 44, 162)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"AHT\",\"offsetgroup\":\"AHT\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[25],\"xaxis\":\"x\",\"y\":[\"AHT\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Arrival Airport=%{y}\\u003cbr\\u003ecount=%{x}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"GTF\",\"marker\":{\"color\":\"rgb(192, 54, 157)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"GTF\",\"offsetgroup\":\"GTF\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[25],\"xaxis\":\"x\",\"y\":[\"GTF\"],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"rgb(17,17,17)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"bar\":[{\"error_x\":{\"color\":\"#f2f5fa\"},\"error_y\":{\"color\":\"#f2f5fa\"},\"marker\":{\"line\":{\"color\":\"rgb(17,17,17)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#A2B1C6\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"minorgridcolor\":\"#506784\",\"startlinecolor\":\"#A2B1C6\"},\"baxis\":{\"endlinecolor\":\"#A2B1C6\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"minorgridcolor\":\"#506784\",\"startlinecolor\":\"#A2B1C6\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"line\":{\"color\":\"#283442\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatter\":[{\"marker\":{\"line\":{\"color\":\"#283442\"}},\"type\":\"scatter\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#506784\"},\"line\":{\"color\":\"rgb(17,17,17)\"}},\"header\":{\"fill\":{\"color\":\"#2a3f5f\"},\"line\":{\"color\":\"rgb(17,17,17)\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#f2f5fa\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#f2f5fa\"},\"geo\":{\"bgcolor\":\"rgb(17,17,17)\",\"lakecolor\":\"rgb(17,17,17)\",\"landcolor\":\"rgb(17,17,17)\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"#506784\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"dark\"},\"paper_bgcolor\":\"rgb(17,17,17)\",\"plot_bgcolor\":\"rgb(17,17,17)\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"bgcolor\":\"rgb(17,17,17)\",\"radialaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"},\"yaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"},\"zaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"}},\"shapedefaults\":{\"line\":{\"color\":\"#f2f5fa\"}},\"sliderdefaults\":{\"bgcolor\":\"#C8D4E3\",\"bordercolor\":\"rgb(17,17,17)\",\"borderwidth\":1,\"tickwidth\":0},\"ternary\":{\"aaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"bgcolor\":\"rgb(17,17,17)\",\"caxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"updatemenudefaults\":{\"bgcolor\":\"#506784\",\"borderwidth\":0},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"#283442\",\"linecolor\":\"#506784\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#283442\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"#283442\",\"linecolor\":\"#506784\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#283442\",\"zerolinewidth\":2}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"count\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Arrival Airport\"},\"categoryorder\":\"array\",\"categoryarray\":[\"GTF\",\"AHT\",\"DZI\",\"ZRZ\",\"YTY\",\"PCO\",\"MPT\",\"PHM\",\"JNB\",\"0\"]},\"legend\":{\"title\":{\"text\":\"Arrival Airport\"},\"tracegroupgap\":0},\"margin\":{\"t\":60},\"barmode\":\"relative\"},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('457b1fa8-65fb-460e-86a6-3acebdac9450');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "px.bar(top,x='count',y='Arrival Airport',color='Arrival Airport',color_discrete_sequence=px.colors.sequential.Agsunset  ,template = 'plotly_dark')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8a0587fb",
   "metadata": {
    "papermill": {
     "duration": 0.025415,
     "end_time": "2024-06-07T11:38:40.583983",
     "exception": false,
     "start_time": "2024-06-07T11:38:40.558568",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Flight Status"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "b63d3825",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:40.637734Z",
     "iopub.status.busy": "2024-06-07T11:38:40.637245Z",
     "iopub.status.idle": "2024-06-07T11:38:40.656432Z",
     "shell.execute_reply": "2024-06-07T11:38:40.655248Z"
    },
    "papermill": {
     "duration": 0.04819,
     "end_time": "2024-06-07T11:38:40.658913",
     "exception": false,
     "start_time": "2024-06-07T11:38:40.610723",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Flight Status</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Cancelled</td>\n",
       "      <td>32942</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>On Time</td>\n",
       "      <td>32846</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Delayed</td>\n",
       "      <td>32831</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Flight Status  count\n",
       "0     Cancelled  32942\n",
       "1       On Time  32846\n",
       "2       Delayed  32831"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "status=df['Flight Status'].value_counts().reset_index()\n",
    "status"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "28ff91aa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:40.713449Z",
     "iopub.status.busy": "2024-06-07T11:38:40.713027Z",
     "iopub.status.idle": "2024-06-07T11:38:40.794041Z",
     "shell.execute_reply": "2024-06-07T11:38:40.792861Z"
    },
    "papermill": {
     "duration": 0.111165,
     "end_time": "2024-06-07T11:38:40.796875",
     "exception": false,
     "start_time": "2024-06-07T11:38:40.685710",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>                            <div id=\"c3fbee63-8999-46ee-b631-9cb517499a8f\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"c3fbee63-8999-46ee-b631-9cb517499a8f\")) {                    Plotly.newPlot(                        \"c3fbee63-8999-46ee-b631-9cb517499a8f\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Flight Status=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Cancelled\",\"marker\":{\"color\":\"#440154\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Cancelled\",\"offsetgroup\":\"Cancelled\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Cancelled\"],\"xaxis\":\"x\",\"y\":[32942],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Flight Status=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"On Time\",\"marker\":{\"color\":\"#482878\",\"pattern\":{\"shape\":\"\"}},\"name\":\"On Time\",\"offsetgroup\":\"On Time\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"On Time\"],\"xaxis\":\"x\",\"y\":[32846],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Flight Status=%{x}\\u003cbr\\u003ecount=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Delayed\",\"marker\":{\"color\":\"#3e4989\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Delayed\",\"offsetgroup\":\"Delayed\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[\"Delayed\"],\"xaxis\":\"x\",\"y\":[32831],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"rgb(17,17,17)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"bar\":[{\"error_x\":{\"color\":\"#f2f5fa\"},\"error_y\":{\"color\":\"#f2f5fa\"},\"marker\":{\"line\":{\"color\":\"rgb(17,17,17)\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#A2B1C6\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"minorgridcolor\":\"#506784\",\"startlinecolor\":\"#A2B1C6\"},\"baxis\":{\"endlinecolor\":\"#A2B1C6\",\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"minorgridcolor\":\"#506784\",\"startlinecolor\":\"#A2B1C6\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"line\":{\"color\":\"#283442\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatter\":[{\"marker\":{\"line\":{\"color\":\"#283442\"}},\"type\":\"scatter\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#506784\"},\"line\":{\"color\":\"rgb(17,17,17)\"}},\"header\":{\"fill\":{\"color\":\"#2a3f5f\"},\"line\":{\"color\":\"rgb(17,17,17)\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#f2f5fa\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#f2f5fa\"},\"geo\":{\"bgcolor\":\"rgb(17,17,17)\",\"lakecolor\":\"rgb(17,17,17)\",\"landcolor\":\"rgb(17,17,17)\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"#506784\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"dark\"},\"paper_bgcolor\":\"rgb(17,17,17)\",\"plot_bgcolor\":\"rgb(17,17,17)\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"bgcolor\":\"rgb(17,17,17)\",\"radialaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"},\"yaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"},\"zaxis\":{\"backgroundcolor\":\"rgb(17,17,17)\",\"gridcolor\":\"#506784\",\"gridwidth\":2,\"linecolor\":\"#506784\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"#C8D4E3\"}},\"shapedefaults\":{\"line\":{\"color\":\"#f2f5fa\"}},\"sliderdefaults\":{\"bgcolor\":\"#C8D4E3\",\"bordercolor\":\"rgb(17,17,17)\",\"borderwidth\":1,\"tickwidth\":0},\"ternary\":{\"aaxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"},\"bgcolor\":\"rgb(17,17,17)\",\"caxis\":{\"gridcolor\":\"#506784\",\"linecolor\":\"#506784\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"updatemenudefaults\":{\"bgcolor\":\"#506784\",\"borderwidth\":0},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"#283442\",\"linecolor\":\"#506784\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#283442\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"#283442\",\"linecolor\":\"#506784\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"#283442\",\"zerolinewidth\":2}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Flight Status\"},\"categoryorder\":\"array\",\"categoryarray\":[\"Cancelled\",\"On Time\",\"Delayed\"]},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"count\"}},\"legend\":{\"title\":{\"text\":\"Flight Status\"},\"tracegroupgap\":0},\"margin\":{\"t\":60},\"barmode\":\"relative\"},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('c3fbee63-8999-46ee-b631-9cb517499a8f');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Visualisation\n",
    "px.bar(status,x='Flight Status',y='count',color='Flight Status',color_discrete_sequence=px.colors.sequential.Viridis,template = 'plotly_dark')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "33bb4b48",
   "metadata": {
    "papermill": {
     "duration": 0.025202,
     "end_time": "2024-06-07T11:38:40.848721",
     "exception": false,
     "start_time": "2024-06-07T11:38:40.823519",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "The numbers are suprisingly identical."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "de6ee48a",
   "metadata": {
    "papermill": {
     "duration": 0.028413,
     "end_time": "2024-06-07T11:38:40.905374",
     "exception": false,
     "start_time": "2024-06-07T11:38:40.876961",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Continent wise Delay Analysis"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bbd678eb",
   "metadata": {
    "papermill": {
     "duration": 0.026189,
     "end_time": "2024-06-07T11:38:40.957706",
     "exception": false,
     "start_time": "2024-06-07T11:38:40.931517",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### North America"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "2a43181f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:41.010772Z",
     "iopub.status.busy": "2024-06-07T11:38:41.010343Z",
     "iopub.status.idle": "2024-06-07T11:38:41.043209Z",
     "shell.execute_reply": "2024-06-07T11:38:41.041829Z"
    },
    "papermill": {
     "duration": 0.062873,
     "end_time": "2024-06-07T11:38:41.046390",
     "exception": false,
     "start_time": "2024-06-07T11:38:40.983517",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Nationality</th>\n",
       "      <th>Airport Name</th>\n",
       "      <th>Country Name</th>\n",
       "      <th>Airport Continent</th>\n",
       "      <th>Continents</th>\n",
       "      <th>Departure Date</th>\n",
       "      <th>Arrival Airport</th>\n",
       "      <th>Flight Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Female</td>\n",
       "      <td>62</td>\n",
       "      <td>Japan</td>\n",
       "      <td>Coldfoot Airport</td>\n",
       "      <td>United States</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>6/28/2022</td>\n",
       "      <td>CXF</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Male</td>\n",
       "      <td>62</td>\n",
       "      <td>Nicaragua</td>\n",
       "      <td>Kugluktuk Airport</td>\n",
       "      <td>Canada</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>12/26/2022</td>\n",
       "      <td>YCO</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Female</td>\n",
       "      <td>71</td>\n",
       "      <td>China</td>\n",
       "      <td>Ottawa / Gatineau Airport</td>\n",
       "      <td>Canada</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>9/16/2022</td>\n",
       "      <td>YND</td>\n",
       "      <td>Delayed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Male</td>\n",
       "      <td>21</td>\n",
       "      <td>China</td>\n",
       "      <td>Gillespie Field</td>\n",
       "      <td>United States</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>2/25/2022</td>\n",
       "      <td>SEE</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Male</td>\n",
       "      <td>13</td>\n",
       "      <td>Thailand</td>\n",
       "      <td>Vermilion Airport</td>\n",
       "      <td>Canada</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>04-06-2022</td>\n",
       "      <td>YVG</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98597</th>\n",
       "      <td>Female</td>\n",
       "      <td>38</td>\n",
       "      <td>Peru</td>\n",
       "      <td>Fort Chipewyan Airport</td>\n",
       "      <td>Canada</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>01-10-2022</td>\n",
       "      <td>YPY</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98604</th>\n",
       "      <td>Female</td>\n",
       "      <td>47</td>\n",
       "      <td>Brazil</td>\n",
       "      <td>St Cloud Regional Airport</td>\n",
       "      <td>United States</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>02-08-2022</td>\n",
       "      <td>STC</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98605</th>\n",
       "      <td>Female</td>\n",
       "      <td>7</td>\n",
       "      <td>China</td>\n",
       "      <td>Newport Municipal Airport</td>\n",
       "      <td>United States</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>09-07-2022</td>\n",
       "      <td>ONP</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98608</th>\n",
       "      <td>Female</td>\n",
       "      <td>24</td>\n",
       "      <td>Chile</td>\n",
       "      <td>Luis Munoz Marin International Airport</td>\n",
       "      <td>Puerto Rico</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>3/23/2022</td>\n",
       "      <td>SJU</td>\n",
       "      <td>Cancelled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98612</th>\n",
       "      <td>Male</td>\n",
       "      <td>82</td>\n",
       "      <td>Indonesia</td>\n",
       "      <td>Five Mile Airport</td>\n",
       "      <td>United States</td>\n",
       "      <td>NAM</td>\n",
       "      <td>North America</td>\n",
       "      <td>3/17/2022</td>\n",
       "      <td>FMC</td>\n",
       "      <td>Delayed</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>32033 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Gender  Age Nationality                            Airport Name  \\\n",
       "0      Female   62       Japan                        Coldfoot Airport   \n",
       "1        Male   62   Nicaragua                       Kugluktuk Airport   \n",
       "3      Female   71       China               Ottawa / Gatineau Airport   \n",
       "4        Male   21       China                         Gillespie Field   \n",
       "9        Male   13    Thailand                       Vermilion Airport   \n",
       "...       ...  ...         ...                                     ...   \n",
       "98597  Female   38        Peru                  Fort Chipewyan Airport   \n",
       "98604  Female   47      Brazil               St Cloud Regional Airport   \n",
       "98605  Female    7       China               Newport Municipal Airport   \n",
       "98608  Female   24       Chile  Luis Munoz Marin International Airport   \n",
       "98612    Male   82   Indonesia                       Five Mile Airport   \n",
       "\n",
       "        Country Name Airport Continent     Continents Departure Date  \\\n",
       "0      United States               NAM  North America      6/28/2022   \n",
       "1             Canada               NAM  North America     12/26/2022   \n",
       "3             Canada               NAM  North America      9/16/2022   \n",
       "4      United States               NAM  North America      2/25/2022   \n",
       "9             Canada               NAM  North America     04-06-2022   \n",
       "...              ...               ...            ...            ...   \n",
       "98597         Canada               NAM  North America     01-10-2022   \n",
       "98604  United States               NAM  North America     02-08-2022   \n",
       "98605  United States               NAM  North America     09-07-2022   \n",
       "98608    Puerto Rico               NAM  North America      3/23/2022   \n",
       "98612  United States               NAM  North America      3/17/2022   \n",
       "\n",
       "      Arrival Airport Flight Status  \n",
       "0                 CXF       On Time  \n",
       "1                 YCO       On Time  \n",
       "3                 YND       Delayed  \n",
       "4                 SEE       On Time  \n",
       "9                 YVG       On Time  \n",
       "...               ...           ...  \n",
       "98597             YPY       On Time  \n",
       "98604             STC       On Time  \n",
       "98605             ONP       On Time  \n",
       "98608             SJU     Cancelled  \n",
       "98612             FMC       Delayed  \n",
       "\n",
       "[32033 rows x 10 columns]"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "N_America=df[df['Continents']=='North America']\n",
    "N_America"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "ed3f6047",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:41.105918Z",
     "iopub.status.busy": "2024-06-07T11:38:41.105494Z",
     "iopub.status.idle": "2024-06-07T11:38:41.119876Z",
     "shell.execute_reply": "2024-06-07T11:38:41.118160Z"
    },
    "papermill": {
     "duration": 0.044896,
     "end_time": "2024-06-07T11:38:41.122877",
     "exception": false,
     "start_time": "2024-06-07T11:38:41.077981",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Flight Status</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Delayed</td>\n",
       "      <td>10696</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Cancelled</td>\n",
       "      <td>10693</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>On Time</td>\n",
       "      <td>10644</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Flight Status  count\n",
       "0       Delayed  10696\n",
       "1     Cancelled  10693\n",
       "2       On Time  10644"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "status_na=N_America['Flight Status'].value_counts().reset_index()\n",
    "status_na"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "196cd3dd",
   "metadata": {
    "papermill": {
     "duration": 0.026839,
     "end_time": "2024-06-07T11:38:41.175891",
     "exception": false,
     "start_time": "2024-06-07T11:38:41.149052",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Asia "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "1a1ec333",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:41.232855Z",
     "iopub.status.busy": "2024-06-07T11:38:41.232400Z",
     "iopub.status.idle": "2024-06-07T11:38:41.263620Z",
     "shell.execute_reply": "2024-06-07T11:38:41.262300Z"
    },
    "papermill": {
     "duration": 0.063974,
     "end_time": "2024-06-07T11:38:41.266164",
     "exception": false,
     "start_time": "2024-06-07T11:38:41.202190",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Nationality</th>\n",
       "      <th>Airport Name</th>\n",
       "      <th>Country Name</th>\n",
       "      <th>Airport Continent</th>\n",
       "      <th>Continents</th>\n",
       "      <th>Departure Date</th>\n",
       "      <th>Arrival Airport</th>\n",
       "      <th>Flight Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Female</td>\n",
       "      <td>47</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>Loralai Airport</td>\n",
       "      <td>Pakistan</td>\n",
       "      <td>AS</td>\n",
       "      <td>Asia</td>\n",
       "      <td>3/19/2022</td>\n",
       "      <td>LRG</td>\n",
       "      <td>Delayed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Male</td>\n",
       "      <td>12</td>\n",
       "      <td>Greece</td>\n",
       "      <td>Enshi Airport</td>\n",
       "      <td>China</td>\n",
       "      <td>AS</td>\n",
       "      <td>Asia</td>\n",
       "      <td>3/29/2022</td>\n",
       "      <td>ENH</td>\n",
       "      <td>Delayed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Male</td>\n",
       "      <td>62</td>\n",
       "      <td>China</td>\n",
       "      <td>Guilin Liangjiang International Airport</td>\n",
       "      <td>China</td>\n",
       "      <td>AS</td>\n",
       "      <td>Asia</td>\n",
       "      <td>09-05-2022</td>\n",
       "      <td>KWL</td>\n",
       "      <td>Cancelled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Female</td>\n",
       "      <td>14</td>\n",
       "      <td>Democratic Republic of the Congo</td>\n",
       "      <td>Bagan Airport</td>\n",
       "      <td>Myanmar</td>\n",
       "      <td>AS</td>\n",
       "      <td>Asia</td>\n",
       "      <td>10-03-2022</td>\n",
       "      <td>NYU</td>\n",
       "      <td>Delayed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>Female</td>\n",
       "      <td>56</td>\n",
       "      <td>China</td>\n",
       "      <td>Rar Gwamar Airport</td>\n",
       "      <td>Indonesia</td>\n",
       "      <td>AS</td>\n",
       "      <td>Asia</td>\n",
       "      <td>07-08-2022</td>\n",
       "      <td>DOB</td>\n",
       "      <td>Delayed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98603</th>\n",
       "      <td>Male</td>\n",
       "      <td>39</td>\n",
       "      <td>Haiti</td>\n",
       "      <td>Senipah Heliport</td>\n",
       "      <td>Indonesia</td>\n",
       "      <td>AS</td>\n",
       "      <td>Asia</td>\n",
       "      <td>10-08-2022</td>\n",
       "      <td>SZH</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98609</th>\n",
       "      <td>Female</td>\n",
       "      <td>22</td>\n",
       "      <td>China</td>\n",
       "      <td>Wuzhou Changzhoudao Airport</td>\n",
       "      <td>China</td>\n",
       "      <td>AS</td>\n",
       "      <td>Asia</td>\n",
       "      <td>4/23/2022</td>\n",
       "      <td>WUZ</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98610</th>\n",
       "      <td>Male</td>\n",
       "      <td>83</td>\n",
       "      <td>France</td>\n",
       "      <td>Warangal Airport</td>\n",
       "      <td>India</td>\n",
       "      <td>AS</td>\n",
       "      <td>Asia</td>\n",
       "      <td>08-05-2022</td>\n",
       "      <td>WGC</td>\n",
       "      <td>Cancelled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98611</th>\n",
       "      <td>Female</td>\n",
       "      <td>41</td>\n",
       "      <td>Canada</td>\n",
       "      <td>Ipil Airport</td>\n",
       "      <td>Philippines</td>\n",
       "      <td>AS</td>\n",
       "      <td>Asia</td>\n",
       "      <td>06-06-2022</td>\n",
       "      <td>IPE</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98613</th>\n",
       "      <td>Female</td>\n",
       "      <td>47</td>\n",
       "      <td>Serbia</td>\n",
       "      <td>Arugam Bay SPB</td>\n",
       "      <td>Sri Lanka</td>\n",
       "      <td>AS</td>\n",
       "      <td>Asia</td>\n",
       "      <td>05-12-2022</td>\n",
       "      <td>AYY</td>\n",
       "      <td>Delayed</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>18637 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Gender  Age                       Nationality  \\\n",
       "12     Female   47                            Sweden   \n",
       "17       Male   12                            Greece   \n",
       "19       Male   62                             China   \n",
       "26     Female   14  Democratic Republic of the Congo   \n",
       "42     Female   56                             China   \n",
       "...       ...  ...                               ...   \n",
       "98603    Male   39                             Haiti   \n",
       "98609  Female   22                             China   \n",
       "98610    Male   83                            France   \n",
       "98611  Female   41                            Canada   \n",
       "98613  Female   47                            Serbia   \n",
       "\n",
       "                                  Airport Name Country Name Airport Continent  \\\n",
       "12                             Loralai Airport     Pakistan                AS   \n",
       "17                               Enshi Airport        China                AS   \n",
       "19     Guilin Liangjiang International Airport        China                AS   \n",
       "26                               Bagan Airport      Myanmar                AS   \n",
       "42                          Rar Gwamar Airport    Indonesia                AS   \n",
       "...                                        ...          ...               ...   \n",
       "98603                         Senipah Heliport    Indonesia                AS   \n",
       "98609              Wuzhou Changzhoudao Airport        China                AS   \n",
       "98610                         Warangal Airport        India                AS   \n",
       "98611                             Ipil Airport  Philippines                AS   \n",
       "98613                           Arugam Bay SPB    Sri Lanka                AS   \n",
       "\n",
       "      Continents Departure Date Arrival Airport Flight Status  \n",
       "12          Asia      3/19/2022             LRG       Delayed  \n",
       "17          Asia      3/29/2022             ENH       Delayed  \n",
       "19          Asia     09-05-2022             KWL     Cancelled  \n",
       "26          Asia     10-03-2022             NYU       Delayed  \n",
       "42          Asia     07-08-2022             DOB       Delayed  \n",
       "...          ...            ...             ...           ...  \n",
       "98603       Asia     10-08-2022             SZH       On Time  \n",
       "98609       Asia      4/23/2022             WUZ       On Time  \n",
       "98610       Asia     08-05-2022             WGC     Cancelled  \n",
       "98611       Asia     06-06-2022             IPE       On Time  \n",
       "98613       Asia     05-12-2022             AYY       Delayed  \n",
       "\n",
       "[18637 rows x 10 columns]"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "asia=df[df['Continents']=='Asia']\n",
    "asia"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "a7d73b83",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:41.323559Z",
     "iopub.status.busy": "2024-06-07T11:38:41.323158Z",
     "iopub.status.idle": "2024-06-07T11:38:41.338745Z",
     "shell.execute_reply": "2024-06-07T11:38:41.337196Z"
    },
    "papermill": {
     "duration": 0.048138,
     "end_time": "2024-06-07T11:38:41.342029",
     "exception": false,
     "start_time": "2024-06-07T11:38:41.293891",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Flight Status</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>On Time</td>\n",
       "      <td>6242</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Cancelled</td>\n",
       "      <td>6235</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Delayed</td>\n",
       "      <td>6160</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Flight Status  count\n",
       "0       On Time   6242\n",
       "1     Cancelled   6235\n",
       "2       Delayed   6160"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "status_as=asia['Flight Status'].value_counts().reset_index()\n",
    "status_as"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "23b1c614",
   "metadata": {
    "papermill": {
     "duration": 0.03008,
     "end_time": "2024-06-07T11:38:41.401863",
     "exception": false,
     "start_time": "2024-06-07T11:38:41.371783",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Oceania "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "f821bfba",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:41.463509Z",
     "iopub.status.busy": "2024-06-07T11:38:41.463018Z",
     "iopub.status.idle": "2024-06-07T11:38:41.497726Z",
     "shell.execute_reply": "2024-06-07T11:38:41.496109Z"
    },
    "papermill": {
     "duration": 0.068947,
     "end_time": "2024-06-07T11:38:41.500571",
     "exception": false,
     "start_time": "2024-06-07T11:38:41.431624",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Nationality</th>\n",
       "      <th>Airport Name</th>\n",
       "      <th>Country Name</th>\n",
       "      <th>Airport Continent</th>\n",
       "      <th>Continents</th>\n",
       "      <th>Departure Date</th>\n",
       "      <th>Arrival Airport</th>\n",
       "      <th>Flight Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Female</td>\n",
       "      <td>77</td>\n",
       "      <td>Russia</td>\n",
       "      <td>Cudal Airport</td>\n",
       "      <td>Australia</td>\n",
       "      <td>OC</td>\n",
       "      <td>Oceania</td>\n",
       "      <td>3/24/2022</td>\n",
       "      <td>CUG</td>\n",
       "      <td>Delayed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>Female</td>\n",
       "      <td>14</td>\n",
       "      <td>China</td>\n",
       "      <td>Faleolo International Airport</td>\n",
       "      <td>Samoa</td>\n",
       "      <td>OC</td>\n",
       "      <td>Oceania</td>\n",
       "      <td>7/22/2022</td>\n",
       "      <td>APW</td>\n",
       "      <td>Delayed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>Male</td>\n",
       "      <td>19</td>\n",
       "      <td>Germany</td>\n",
       "      <td>Nesson Airport</td>\n",
       "      <td>New Caledonia</td>\n",
       "      <td>OC</td>\n",
       "      <td>Oceania</td>\n",
       "      <td>3/25/2022</td>\n",
       "      <td>HLU</td>\n",
       "      <td>Cancelled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>Male</td>\n",
       "      <td>9</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>Gora Airstrip</td>\n",
       "      <td>Papua New Guinea</td>\n",
       "      <td>OC</td>\n",
       "      <td>Oceania</td>\n",
       "      <td>6/25/2022</td>\n",
       "      <td>GOC</td>\n",
       "      <td>On Time</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>Male</td>\n",
       "      <td>32</td>\n",
       "      <td>China</td>\n",
       "      <td>Moki Airport</td>\n",
       "      <td>Papua New Guinea</td>\n",
       "      <td>OC</td>\n",
       "      <td>Oceania</td>\n",
       "      <td>12/21/2022</td>\n",
       "      <td>MJJ</td>\n",
       "      <td>Cancelled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98538</th>\n",
       "      <td>Male</td>\n",
       "      <td>76</td>\n",
       "      <td>Indonesia</td>\n",
       "      <td>Pimaga Airport</td>\n",
       "      <td>Papua New Guinea</td>\n",
       "      <td>OC</td>\n",
       "      <td>Oceania</td>\n",
       "      <td>12/28/2022</td>\n",
       "      <td>PMP</td>\n",
       "      <td>Delayed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98567</th>\n",
       "      <td>Female</td>\n",
       "      <td>5</td>\n",
       "      <td>Finland</td>\n",
       "      <td>Meekatharra Airport</td>\n",
       "      <td>Australia</td>\n",
       "      <td>OC</td>\n",
       "      <td>Oceania</td>\n",
       "      <td>12-09-2022</td>\n",
       "      <td>MKR</td>\n",
       "      <td>Delayed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98580</th>\n",
       "      <td>Male</td>\n",
       "      <td>82</td>\n",
       "      <td>Norway</td>\n",
       "      <td>Kurwina Airport</td>\n",
       "      <td>Papua New Guinea</td>\n",
       "      <td>OC</td>\n",
       "      <td>Oceania</td>\n",
       "      <td>1/29/2022</td>\n",
       "      <td>KWV</td>\n",
       "      <td>Cancelled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98589</th>\n",
       "      <td>Female</td>\n",
       "      <td>29</td>\n",
       "      <td>Brazil</td>\n",
       "      <td>Austral Downs Airport</td>\n",
       "      <td>Australia</td>\n",
       "      <td>OC</td>\n",
       "      <td>Oceania</td>\n",
       "      <td>5/29/2022</td>\n",
       "      <td>AWP</td>\n",
       "      <td>Cancelled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98600</th>\n",
       "      <td>Male</td>\n",
       "      <td>47</td>\n",
       "      <td>Uganda</td>\n",
       "      <td>Eliptamin Airport</td>\n",
       "      <td>Papua New Guinea</td>\n",
       "      <td>OC</td>\n",
       "      <td>Oceania</td>\n",
       "      <td>6/21/2022</td>\n",
       "      <td>EPT</td>\n",
       "      <td>Delayed</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>13866 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Gender  Age Nationality                   Airport Name  \\\n",
       "13     Female   77      Russia                  Cudal Airport   \n",
       "30     Female   14       China  Faleolo International Airport   \n",
       "32       Male   19     Germany                 Nesson Airport   \n",
       "35       Male    9      Sweden                  Gora Airstrip   \n",
       "37       Male   32       China                   Moki Airport   \n",
       "...       ...  ...         ...                            ...   \n",
       "98538    Male   76   Indonesia                 Pimaga Airport   \n",
       "98567  Female    5     Finland            Meekatharra Airport   \n",
       "98580    Male   82      Norway                Kurwina Airport   \n",
       "98589  Female   29      Brazil          Austral Downs Airport   \n",
       "98600    Male   47      Uganda              Eliptamin Airport   \n",
       "\n",
       "           Country Name Airport Continent Continents Departure Date  \\\n",
       "13            Australia                OC    Oceania      3/24/2022   \n",
       "30                Samoa                OC    Oceania      7/22/2022   \n",
       "32        New Caledonia                OC    Oceania      3/25/2022   \n",
       "35     Papua New Guinea                OC    Oceania      6/25/2022   \n",
       "37     Papua New Guinea                OC    Oceania     12/21/2022   \n",
       "...                 ...               ...        ...            ...   \n",
       "98538  Papua New Guinea                OC    Oceania     12/28/2022   \n",
       "98567         Australia                OC    Oceania     12-09-2022   \n",
       "98580  Papua New Guinea                OC    Oceania      1/29/2022   \n",
       "98589         Australia                OC    Oceania      5/29/2022   \n",
       "98600  Papua New Guinea                OC    Oceania      6/21/2022   \n",
       "\n",
       "      Arrival Airport Flight Status  \n",
       "13                CUG       Delayed  \n",
       "30                APW       Delayed  \n",
       "32                HLU     Cancelled  \n",
       "35                GOC       On Time  \n",
       "37                MJJ     Cancelled  \n",
       "...               ...           ...  \n",
       "98538             PMP       Delayed  \n",
       "98567             MKR       Delayed  \n",
       "98580             KWV     Cancelled  \n",
       "98589             AWP     Cancelled  \n",
       "98600             EPT       Delayed  \n",
       "\n",
       "[13866 rows x 10 columns]"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "oceania=df[df['Continents']=='Oceania']\n",
    "oceania"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "eb095245",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:41.561548Z",
     "iopub.status.busy": "2024-06-07T11:38:41.561135Z",
     "iopub.status.idle": "2024-06-07T11:38:41.574459Z",
     "shell.execute_reply": "2024-06-07T11:38:41.573338Z"
    },
    "papermill": {
     "duration": 0.045701,
     "end_time": "2024-06-07T11:38:41.577028",
     "exception": false,
     "start_time": "2024-06-07T11:38:41.531327",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Flight Status</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>On Time</td>\n",
       "      <td>6242</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Cancelled</td>\n",
       "      <td>6235</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Delayed</td>\n",
       "      <td>6160</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Flight Status  count\n",
       "0       On Time   6242\n",
       "1     Cancelled   6235\n",
       "2       Delayed   6160"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "status_oc=asia['Flight Status'].value_counts().reset_index()\n",
    "status_oc"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2c06d53d",
   "metadata": {
    "papermill": {
     "duration": 0.029497,
     "end_time": "2024-06-07T11:38:41.634982",
     "exception": false,
     "start_time": "2024-06-07T11:38:41.605485",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Europe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "e062abe8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:41.694560Z",
     "iopub.status.busy": "2024-06-07T11:38:41.694144Z",
     "iopub.status.idle": "2024-06-07T11:38:41.721063Z",
     "shell.execute_reply": "2024-06-07T11:38:41.719788Z"
    },
    "papermill": {
     "duration": 0.060401,
     "end_time": "2024-06-07T11:38:41.723681",
     "exception": false,
     "start_time": "2024-06-07T11:38:41.663280",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Flight Status</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Delayed</td>\n",
       "      <td>4178</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Cancelled</td>\n",
       "      <td>4095</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>On Time</td>\n",
       "      <td>4062</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Flight Status  count\n",
       "0       Delayed   4178\n",
       "1     Cancelled   4095\n",
       "2       On Time   4062"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "eu=df[df['Continents']=='Europe']\n",
    "status_eu=eu['Flight Status'].value_counts().reset_index()\n",
    "status_eu"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b8f87956",
   "metadata": {
    "papermill": {
     "duration": 0.026809,
     "end_time": "2024-06-07T11:38:41.778134",
     "exception": false,
     "start_time": "2024-06-07T11:38:41.751325",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Africa"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "ea0d6dc8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:41.834964Z",
     "iopub.status.busy": "2024-06-07T11:38:41.834544Z",
     "iopub.status.idle": "2024-06-07T11:38:41.860264Z",
     "shell.execute_reply": "2024-06-07T11:38:41.859080Z"
    },
    "papermill": {
     "duration": 0.057383,
     "end_time": "2024-06-07T11:38:41.862672",
     "exception": false,
     "start_time": "2024-06-07T11:38:41.805289",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Flight Status</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>On Time</td>\n",
       "      <td>3719</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Cancelled</td>\n",
       "      <td>3657</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Delayed</td>\n",
       "      <td>3654</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Flight Status  count\n",
       "0       On Time   3719\n",
       "1     Cancelled   3657\n",
       "2       Delayed   3654"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "af=df[df['Continents']=='Africa']\n",
    "status_af=af['Flight Status'].value_counts().reset_index()\n",
    "status_af"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9a786491",
   "metadata": {
    "papermill": {
     "duration": 0.027505,
     "end_time": "2024-06-07T11:38:41.919092",
     "exception": false,
     "start_time": "2024-06-07T11:38:41.891587",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### North America"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "bea8fa49",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-07T11:38:41.979926Z",
     "iopub.status.busy": "2024-06-07T11:38:41.979520Z",
     "iopub.status.idle": "2024-06-07T11:38:42.005567Z",
     "shell.execute_reply": "2024-06-07T11:38:42.004385Z"
    },
    "papermill": {
     "duration": 0.06053,
     "end_time": "2024-06-07T11:38:42.008092",
     "exception": false,
     "start_time": "2024-06-07T11:38:41.947562",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Flight Status</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Cancelled</td>\n",
       "      <td>3643</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>On Time</td>\n",
       "      <td>3566</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Delayed</td>\n",
       "      <td>3509</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Flight Status  count\n",
       "0     Cancelled   3643\n",
       "1       On Time   3566\n",
       "2       Delayed   3509"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sa=df[df['Continents']=='South America']\n",
    "status_sa=sa['Flight Status'].value_counts().reset_index()\n",
    "status_sa"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "56be736f",
   "metadata": {
    "papermill": {
     "duration": 0.027416,
     "end_time": "2024-06-07T11:38:42.064239",
     "exception": false,
     "start_time": "2024-06-07T11:38:42.036823",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "We observed that:\n",
    "* Most Cancelled Flights are from North America\n",
    "* Most delayed are from North america\n",
    "* Most On Time are from North america\n",
    "* Number of male and female passengers are identical \n",
    "* North America as a continent and USA as a country has the highest numbers of passengers"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 3682609,
     "sourceId": 6541762,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30732,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 17.543948,
   "end_time": "2024-06-07T11:38:42.914093",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-06-07T11:38:25.370145",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
